[
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|PeekPokeBridge",
    "channelNames":[
      "reset"
    ],
    "widgetClass":"midas.widgets.PeekPokeBridgeModule",
    "widgetConstructorKey":{
      "class":"midas.widgets.PeekPokeKey",
      "peeks":[
        
      ],
      "pokes":[
        {
          "name":"reset",
          "tpe":{
            "typeString":"UInt"
          },
          "fieldWidth":1
        }
      ],
      "maxChannelDecoupling":2
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":0
    },
    "clock":"~FireSim|PeekPokeBridge>clock",
    "sinks":[
      "~FireSim|PeekPokeBridge>reset"
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.InterruptBusWrapper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_4",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_12",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_13",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_14",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_19",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>allIDs_FIFOed_1",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_28",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_29",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_30",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_1"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_4",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_16",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_17",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_18",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_4"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_4",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_11",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_12",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_13",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_3"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_4",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_16",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_17",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_18",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_4"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_4",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_20",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_21",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_22",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLSourceShrinker"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_6"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLSourceShrinker_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.FixedClockBroadcast_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_5"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_9",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush64_Reg_write_start",
    "message":"Flush the phsyical address equal to the 64-bit written data from the cache: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_10",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush64_Reg_write_out",
    "message":"Flush the phsyical address equal to the 64-bit written data from the cache: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_22",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush32_Reg_write_start",
    "message":"Flush the physical address equal to the 32-bit written data << 4 from the cache: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_23",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush32_Reg_write_out",
    "message":"Flush the physical address equal to the 32-bit written data << 4 from the cache: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_33",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Banks_Reg_read_start",
    "message":"Number of banks in the cache: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_34",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Banks_Reg_read_out",
    "message":"Number of banks in the cache: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_42",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Ways_Reg_read_start",
    "message":"Number of ways per bank: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_43",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Ways_Reg_read_out",
    "message":"Number of ways per bank: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_51",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgSets_Reg_read_start",
    "message":"Base-2 logarithm of the sets per bank: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_52",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgSets_Reg_read_out",
    "message":"Base-2 logarithm of the sets per bank: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_60",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgBlockBytes_Reg_read_start",
    "message":"Base-2 logarithm of the bytes per cache block: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_61",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgBlockBytes_Reg_read_out",
    "message":"Base-2 logarithm of the bytes per cache block: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.InclusiveCache",
    "regMappingSer":{
      "displayName":"InclusiveCache",
      "deviceName":"InclusiveCache",
      "baseAddress":33619968,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"Banks",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of banks in the cache",
          "group":"Config",
          "groupDesc":"Information about the Cache Configuration",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"Ways",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of ways per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"lgSets",
          "resetValue":10,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the sets per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"lgBlockBytes",
          "resetValue":6,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the bytes per cache block",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200",
          "bitOffset":0,
          "bitWidth":64,
          "name":"Flush64",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the phsyical address equal to the 64-bit written data from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x240",
          "bitOffset":0,
          "bitWidth":32,
          "name":"Flush32",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the physical address equal to the 32-bit written data << 4 from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceA>_T_1",
    "clock":"~FireSim|SourceA>clock",
    "reset":"~FireSim|SourceA>reset",
    "label":"CCACHE_L2_SOURCEA_STALL",
    "message":"MemorySystem;;Backpressured when issuing an Acquire",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceB>_T_9",
    "clock":"~FireSim|SourceB>clock",
    "reset":"~FireSim|SourceB>reset",
    "label":"CCACHE_L2_SOURCEB_STALL",
    "message":"MemorySystem;;Backpressured when issuing a probe",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_11",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_HAZARD",
    "message":"MemorySystem;;Prevented Eviction data hazard with backpressure",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_13",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_22",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_QUEUE_FULL",
    "message":"MemorySystem;;Eviction queue fully utilized",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>s1_block_r",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_SRAM_HOLD",
    "message":"MemorySystem;;SRAM read-out successful, but stalled by stage 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_BYPASS_HOLD",
    "message":"MemorySystem;;Bypass match successful, but stalled by stage 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_3",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_NO_MODIFY",
    "message":"MemorySystem;;Transaction servicable without SRAM",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_5",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_READ_STALL",
    "message":"MemorySystem;;Data readout stalled",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_11",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_QUEUE_FULL",
    "message":"MemorySystem;;Filled SRAM skidpad queue completely",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_15",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_STALL",
    "message":"MemorySystem;;Stage 1 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_17",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_PUTA_STALL",
    "message":"MemorySystem;;Channel A put buffer was not ready in time",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_19",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_PUTC_STALL",
    "message":"MemorySystem;;Channel C put buffer was not ready in time",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_22",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_STALL",
    "message":"MemorySystem;;Stage 2 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_32",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_3_STALL",
    "message":"MemorySystem;;Stage 3 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_40",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_WRITEBACK_STALL",
    "message":"MemorySystem;;Data writeback stalled",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_44",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MIN",
    "message":"MemorySystem;;Evaluated a signed minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_48",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MAX",
    "message":"MemorySystem;;Evaluated a signed maximum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_52",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MINU",
    "message":"MemorySystem;;Evaluated an unsigned minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_56",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MAXU",
    "message":"MemorySystem;;Evaluated an unsigned minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_60",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_ADD",
    "message":"MemorySystem;;Evaluated an addition atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_64",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_XOR",
    "message":"MemorySystem;;Evaluated a bitwise XOR atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_68",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_OR",
    "message":"MemorySystem;;Evaluated a bitwise OR atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_72",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_AND",
    "message":"MemorySystem;;Evaluated a bitwise AND atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_76",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_SWAP",
    "message":"MemorySystem;;Evaluated a bitwise SWAP atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_81",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_0",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_84",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_1",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_87",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_2",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_90",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_3",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_93",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_4",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_96",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_5",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_99",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_6",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_102",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_7",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceX>_T_1",
    "clock":"~FireSim|SourceX>clock",
    "reset":"~FireSim|SourceX>reset",
    "label":"CCACHE_L2_SOURCEX_STALL",
    "message":"MemorySystem;;Backpressure when sending a control message",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_REQ_STALL",
    "message":"MemorySystem;;No MSHR available to sink request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T_1",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_BUF_STALL",
    "message":"MemorySystem;;No space in putbuffer for beat",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T_2",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_SET_STALL",
    "message":"MemorySystem;;No space in putbuffer for request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_7",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_10",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_REQ_STALL",
    "message":"MemorySystem;;No MSHR available to sink request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_13",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_BUF_STALL",
    "message":"MemorySystem;;No space in putbuffer for beat",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_16",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_SET_STALL",
    "message":"MemorySystem;;No space in putbuffer for request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkD>_T_3",
    "clock":"~FireSim|SinkD>clock",
    "reset":"~FireSim|SinkD>reset",
    "label":"CCACHE_L2_SINKD_HAZARD",
    "message":"MemorySystem;;Prevented Grant data hazard with backpressure",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkD>_T_5",
    "clock":"~FireSim|SinkD>clock",
    "reset":"~FireSim|SinkD>reset",
    "label":"CCACHE_L2_SINKD_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkX>_T_1",
    "clock":"~FireSim|SinkX>clock",
    "reset":"~FireSim|SinkX>reset",
    "label":"CCACHE_L2_SINKX_STALL",
    "message":"MemorySystem;;Backpressure when accepting a control message",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.Directory.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":184,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":23
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Directory>_T_103",
    "clock":"~FireSim|Directory>clock",
    "reset":"~FireSim|Directory>reset",
    "label":"CCACHE_L2_DIRECTORY_HIT_BYPASS",
    "message":"MemorySystem;;Bypassing write to a directory hit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Directory>_T_107",
    "clock":"~FireSim|Directory>clock",
    "reset":"~FireSim|Directory>reset",
    "label":"CCACHE_L2_DIRECTORY_EVICT_BYPASS",
    "message":"MemorySystem;;Bypassing a write to a directory eviction",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_0",
    "address_width":14,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_1",
    "address_width":14,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_2",
    "address_width":14,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_3",
    "address_width":14,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_79",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_80",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_81",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_82",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_83",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_84",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_85",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_86",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_87",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_88",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_89",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_90",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_110",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_127",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_130",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_280",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_290",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_321",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_324",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_334",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_393",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_431",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_441",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_465",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_468",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_471",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_474",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_477",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_515",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_518",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_527",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_530",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_532",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_533",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_543",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_546",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_549",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_560",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_561",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_562",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_563",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_564",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_565",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_79",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_80",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_81",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_82",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_83",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_84",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_85",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_86",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_87",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_88",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_89",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_90",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_110",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_127",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_130",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_280",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_290",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_321",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_324",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_334",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_393",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_431",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_441",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_465",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_468",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_471",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_474",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_477",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_515",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_518",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_527",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_530",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_532",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_533",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_543",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_546",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_549",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_560",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_561",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_562",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_563",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_564",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_565",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_79",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_80",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_81",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_82",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_83",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_84",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_85",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_86",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_87",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_88",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_89",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_90",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_110",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_127",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_130",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_280",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_290",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_321",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_324",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_334",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_393",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_431",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_441",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_465",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_468",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_471",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_474",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_477",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_515",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_518",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_527",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_530",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_532",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_533",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_543",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_546",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_549",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_560",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_561",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_562",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_563",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_564",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_565",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_79",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_80",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_81",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_82",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_83",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_84",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_85",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_86",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_87",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_88",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_89",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_90",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_110",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_127",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_130",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_280",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_290",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_321",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_324",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_334",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_393",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_431",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_441",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_465",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_468",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_471",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_474",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_477",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_515",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_518",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_527",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_530",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_532",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_533",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_543",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_546",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_549",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_560",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_561",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_562",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_563",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_564",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_565",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_79",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_80",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_81",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_82",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_83",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_84",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_85",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_86",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_87",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_88",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_89",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_90",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_110",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_127",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_130",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_280",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_290",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_321",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_324",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_334",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_393",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_431",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_441",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_465",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_468",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_471",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_474",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_477",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_515",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_518",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_527",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_530",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_532",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_533",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_543",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_546",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_549",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_560",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_561",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_562",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_563",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_564",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_565",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_79",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_80",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_81",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_82",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_83",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_84",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_85",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_86",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_87",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_88",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_89",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_90",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_110",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_127",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_130",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_280",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_290",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_321",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_324",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_334",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_393",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_431",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_441",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_465",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_468",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_471",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_474",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_477",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_515",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_518",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_527",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_530",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_532",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_533",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_543",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_546",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_549",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_560",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_561",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_562",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_563",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_564",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_565",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_79",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_80",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_81",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_82",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_83",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_84",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_85",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_86",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_87",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_88",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_89",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_90",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_110",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_127",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_130",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_280",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_290",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_321",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_324",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_334",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_393",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_431",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_441",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_465",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_468",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_471",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_474",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_477",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_515",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_518",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_527",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_530",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_532",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_533",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_543",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_546",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_549",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_560",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_561",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_562",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_563",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_564",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_565",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_3",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_ABC_INTERLOCK",
    "message":"MemorySystem;;ABC MSHR interlocked due to pre-emption",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_5",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_BLOCKC",
    "message":"MemorySystem;;Interlock C request while resolving set conflict",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_6",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_NESTC",
    "message":"MemorySystem;;Priority escalation from channel C",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_7",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_SECONDARY",
    "message":"MemorySystem;;Enqueue secondary miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_9",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_BYPASS",
    "message":"MemorySystem;;Bypass new request directly to conflicting MSHR",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_11",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_RELOAD",
    "message":"MemorySystem;;Back-to-back service of two requests",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_13",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_POP",
    "message":"MemorySystem;;Service of a secondary miss",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLFilter"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLJbar"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_10"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_12"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>io.cpu.resp"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>io.cpu.s1_data"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_1",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_2",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_3",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_4",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_6",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_8",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_10",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_12",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_14",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_16",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_21",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_25",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_30",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_34",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_39",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_43",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_45",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_46",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_47",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_48",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_49",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_51",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_53",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_55",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_57",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_59",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_61",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_66",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_70",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_75",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_79",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_84",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_88",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_90",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_91",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_92",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_93",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_94",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_96",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_98",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_100",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_102",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_104",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_106",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_111",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_115",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_120",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_124",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_129",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_133",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_135",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_136",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_137",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_138",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_139",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_141",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_143",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_145",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_147",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_149",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_151",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_156",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_160",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_165",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_169",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_174",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_178",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_180",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_181",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_182",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_183",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_184",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_186",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_188",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_190",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_192",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_194",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_196",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_201",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_205",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_210",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_214",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_219",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_223",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_225",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_226",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_227",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_228",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_229",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_231",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_233",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_235",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_237",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_239",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_241",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_246",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_250",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_255",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_259",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_264",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_268",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_270",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_271",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_272",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_273",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_274",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_276",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_278",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_280",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_282",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_284",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_286",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_291",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_295",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_300",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_304",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_309",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_313",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_315",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_316",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_317",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_318",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_319",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_321",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_323",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_325",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_327",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_329",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_331",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_336",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_340",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_345",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_349",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_354",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_358",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1327",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1329",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1330",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1334",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1337",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1340",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1342",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>multipleHits",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_1",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_2",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_3",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_4",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_6",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_8",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_10",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_12",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_14",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_16",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_21",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_25",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_30",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_34",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_39",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_43",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_45",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_46",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_47",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_48",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_49",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_51",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_53",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_55",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_57",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_59",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_61",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_66",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_70",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_75",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_79",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_84",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_88",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_90",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_91",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_92",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_93",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_94",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_96",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_98",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_100",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_102",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_104",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_106",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_111",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_115",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_120",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_124",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_129",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_133",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_135",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_136",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_137",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_138",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_139",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_141",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_143",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_145",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_147",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_149",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_151",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_156",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_160",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_165",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_169",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_174",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_178",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_180",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_181",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_182",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_183",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_184",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_186",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_188",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_190",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_192",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_194",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_196",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_201",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_205",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_210",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_214",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_219",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_223",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_225",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_226",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_227",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_228",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_229",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_231",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_233",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_235",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_237",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_239",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_241",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_246",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_250",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_255",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_259",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_264",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_268",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_270",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_271",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_272",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_273",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_274",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_276",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_278",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_280",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_282",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_284",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_286",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_291",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_295",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_300",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_304",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_309",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_313",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_315",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_316",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_317",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_318",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_319",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_321",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_323",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_325",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_327",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_329",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_331",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_336",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_340",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_345",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_349",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_354",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_358",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1327",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1329",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1330",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1334",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1337",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1340",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1342",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>multipleHits",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.DCache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":100,
    "depth":64,
    "description":"DCache Tag Array",
    "write_mask_granularity":25
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.DCacheDataArray.data_arrays_0",
    "address_width":9,
    "name":"data_arrays_0",
    "data_width":256,
    "depth":512,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>s2_valid_cached_miss"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>s2_victim_dirty"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>pstore_drain_structural",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_STORE_STRUCTURAL_HAZARD",
    "message":"MemorySystem;;D$ read-modify-write structural hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_260",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_STORE_DRAIN_ON_MISS",
    "message":"MemorySystem;;D$ store buffer drain on miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_261",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_WAW_HAZARD",
    "message":"MemorySystem;;D$ write-after-write hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_296",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_BLOCK_D",
    "message":"MemorySystem;;D$ D-channel blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_318",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_BLOCK_B",
    "message":"MemorySystem;;D$ B-channel blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_325",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_TAG_ECC_ERROR_DURING_FENCE_I",
    "message":"MemorySystem;;D$ ECC error in tag array during cache flush",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_327",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_DATA_ECC_ERROR_DURING_FENCE_I",
    "message":"MemorySystem;;D$ ECC error in data array during cache flush",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_331",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_D_ERROR_CACHED",
    "message":"MemorySystem;;D$ D-channel error, cached",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_333",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_D_ERROR_UNCACHED",
    "message":"MemorySystem;;D$ D-channel error, uncached",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_355",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_356",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_357",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_358",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_359",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_360",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_373",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_374",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_375",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_376",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_377",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_378",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_391",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_392",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_393",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_394",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_395",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_396",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|ICache>s1_hit"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":96,
    "depth":64,
    "description":"ICache Tag Array",
    "write_mask_granularity":24
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>refillError",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_D_CORRUPT",
    "message":"MemorySystem;;I$ D-channel corrupt",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.data_arrays_0",
    "address_width":9,
    "name":"data_arrays_0",
    "data_width":128,
    "depth":512,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.data_arrays_1",
    "address_width":9,
    "name":"data_arrays_1",
    "data_width":128,
    "depth":512,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_50",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_MISS_A_STALL",
    "message":"MemorySystem;;I$ miss blocked by A-channel",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_51",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_FLUSH_DURING_MISS",
    "message":"MemorySystem;;I$ flushed during miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_130",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_131",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_132",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_135",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_138",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_139",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_140",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_143",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_146",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_147",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_148",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_151",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_1",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_2",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_3",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_4",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_6",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_8",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_10",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_12",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_14",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_16",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_21",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_25",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_30",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_34",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_39",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_43",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_45",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_46",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_47",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_48",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_49",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_51",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_53",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_55",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_57",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_59",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_61",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_66",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_70",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_75",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_79",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_84",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_88",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_90",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_91",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_92",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_93",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_94",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_96",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_98",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_100",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_102",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_104",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_106",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_111",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_115",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_120",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_124",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_129",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_133",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_135",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_136",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_137",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_138",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_139",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_141",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_143",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_145",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_147",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_149",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_151",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_156",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_160",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_165",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_169",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_174",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_178",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_180",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_181",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_182",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_183",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_184",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_186",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_188",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_190",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_192",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_194",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_196",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_201",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_205",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_210",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_214",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_219",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_223",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_225",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_226",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_227",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_228",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_229",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_231",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_233",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_235",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_237",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_239",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_241",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_246",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_250",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_255",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_259",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_264",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_268",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_270",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_271",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_272",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_273",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_274",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_276",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_278",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_280",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_282",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_284",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_286",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_291",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_295",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_300",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_304",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_309",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_313",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_315",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_316",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_317",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_318",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_319",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_321",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_323",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_325",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_327",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_329",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_331",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_336",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_340",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_345",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_349",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_354",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_358",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1327",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1329",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1330",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1334",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1337",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1340",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1342",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>multipleHits",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BTBParams",
    "params":{
      "nPages":6,
      "nMatchBits":14,
      "nEntries":28,
      "bhtParams":{
        "nEntries":512,
        "counterLength":1,
        "historyLength":8,
        "historyBits":3
      },
      "nRAS":6,
      "updatesOutOfOrder":false
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BHTParams",
    "params":{
      "nEntries":512,
      "counterLength":1,
      "historyLength":8,
      "historyBits":3
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Frontend>wrong_path",
    "clock":"~FireSim|Frontend>gated_clock",
    "reset":"~FireSim|Frontend>reset",
    "label":"FRONTEND_BTB_NON_CFI_ON_WRONG_PATH",
    "message":"Rocket;;BTB predicted a non-branch was taken while on the wrong path",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Frontend>wrong_path",
    "clock":"~FireSim|Frontend>gated_clock",
    "reset":"~FireSim|Frontend>reset",
    "label":"FRONTEND_BTB_NON_CFI_ON_WRONG_PATH",
    "message":"Rocket;;BTB predicted a non-branch was taken while on the wrong path",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_9"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.RocketTile.bundleOut_0_5.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "definition":{
      "ITBrNTaken":4,
      "ITBrTaken":5,
      "ITReserved7":7,
      "ITExcReturn":3,
      "ITInterrupt":2,
      "ITException":1,
      "ITCoSwap":12,
      "ITUnCall":8,
      "ITReserved6":6,
      "ITNothing":0,
      "ITReturn":13,
      "ITInTail":11,
      "ITInCall":9,
      "ITInJump":15,
      "ITUnJump":14,
      "ITUnTail":10
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.RocketTile.auto.trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPUFMAPipe"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPToInt"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.IntToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPUFMAPipe_1"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_10",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_WB_STRUCTURAL",
    "message":"Core;;structural hazard on writeback",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_33",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DUAL_WRITEBACK",
    "message":"Core;;load and FMA writeback on same cycle",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_34",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_KILLED",
    "message":"Core;;divide killed after issued to divider",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_37",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_BUSY",
    "message":"Core;;divider structural hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_38",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_WB_STRUCTURAL",
    "message":"Core;;structural hazard on division writeback",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_65",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_PTE_CACHE_HIT_L0",
    "message":"MemorySystem;;PTE cache hit, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_69",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_PTE_CACHE_HIT_L1",
    "message":"MemorySystem;;PTE cache hit, level 1",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.PTW.l2_tlb_ram",
    "address_width":10,
    "name":"l2_tlb_ram",
    "data_width":47,
    "depth":1024,
    "description":"L2 TLB",
    "write_mask_granularity":47
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_143",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_TLB_HIT_WAY0",
    "message":"MemorySystem;;L2 TLB hit way0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_181",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0",
    "message":"MemorySystem;;successful page-table access, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_183",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_186",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_190",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_BAD_PPN_LSB",
    "message":"MemorySystem;;PPN LSBs not zero, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_193",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1",
    "message":"MemorySystem;;successful page-table access, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_195",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_198",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_202",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_BAD_PPN_LSB",
    "message":"MemorySystem;;PPN LSBs not zero, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_205",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2",
    "message":"MemorySystem;;successful page-table access, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_207",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_210",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_219",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_TOO_DEEP",
    "message":"MemorySystem;;page table too deep",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>io.mem.s2_nack",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_NACK",
    "message":"MemorySystem;;D$ nacked page-table access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_221",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_AE",
    "message":"MemorySystem;;access exception while walking page table",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.RocketTile",
    "paramsClassName":"freechips.rocketchip.tile.RocketTileParams",
    "params":{
      "name":"tile",
      "dataScratchpadBytes":0,
      "btb":{
        "nEntries":28,
        "nMatchBits":14,
        "nPages":6,
        "nRAS":6,
        "bhtParams":{
          "nEntries":512,
          "counterLength":1,
          "historyLength":8,
          "historyBits":3
        },
        "updatesOutOfOrder":false
      },
      "hartId":0,
      "icache":{
        "nSets":64,
        "nWays":4,
        "rowBits":64,
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "cacheIdBits":0,
        "prefetch":false,
        "blockBytes":64,
        "latency":2,
        "fetchBytes":4
      },
      "boundaryBuffers":false,
      "core":{
        "bootFreqHz":0,
        "useVM":true,
        "useUser":false,
        "useSupervisor":false,
        "useDebug":true,
        "useAtomics":true,
        "useAtomicsOnlyForIO":false,
        "useCompressed":true,
        "useRVE":false,
        "useSCIE":false,
        "nLocalInterrupts":0,
        "useNMI":false,
        "nBreakpoints":1,
        "useBPWatch":false,
        "mcontextWidth":0,
        "scontextWidth":0,
        "nPMPs":8,
        "nPerfCounters":0,
        "haveBasicCounters":true,
        "haveCFlush":false,
        "misaWritable":true,
        "nL2TLBEntries":1024,
        "nL2TLBWays":1,
        "mtvecInit":0,
        "mtvecWritable":true,
        "fastLoadWord":true,
        "fastLoadByte":false,
        "branchPredictionModeCSR":false,
        "clockGate":false,
        "mvendorid":0,
        "mimpid":538447876,
        "mulDiv":{
          "mulUnroll":8,
          "divUnroll":1,
          "mulEarlyOut":true,
          "divEarlyOut":true,
          "divEarlyOutGranularity":1
        },
        "fpu":{
          "minFLen":32,
          "fLen":64,
          "divSqrt":true,
          "sfmaLatency":3,
          "dfmaLatency":4
        }
      },
      "dcache":{
        "nSets":64,
        "nWays":4,
        "rowBits":64,
        "replacementPolicy":"random",
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "dataECCBytes":1,
        "nMSHRs":0,
        "nSDQ":17,
        "nRPQ":16,
        "nMMIOs":1,
        "blockBytes":64,
        "separateUncachedResp":false,
        "acquireBeforeRelease":false,
        "pipelineWayMux":false,
        "clockGate":false
      },
      "clockSinkParams":{
        "phaseDeg":0.0,
        "phaseErrorDeg":5.0,
        "freqErrorPPM":10000.0,
        "jitterPS":200.0
      }
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_281",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_283",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_285",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_287",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_289",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_291",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_293",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_295",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_297",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_299",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_301",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_303",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_305",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_307",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_309",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_311",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_313",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_315",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_317",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_319",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_321",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_10",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_323",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_10",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_325",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_327",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_329",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_331",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_333",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_335",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_337",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_14",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_339",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_14",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_341",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_343",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_345",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_347",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_349",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_351",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_353",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_355",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_357",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_359",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_361",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_363",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_365",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_367",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_369",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_371",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_373",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_375",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_377",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_379",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_381",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_383",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_385",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_387",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_389",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_391",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_393",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_395",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_397",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_399",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_422",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_425",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_434",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_437",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_446",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_449",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_458",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_461",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_470",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_769",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_473",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_769",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_482",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_768",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_485",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_768",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_494",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_773",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_497",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_773",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_506",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_509",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_518",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_772",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_521",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_772",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_530",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_533",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_542",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_545",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_554",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_557",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_566",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_569",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_578",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3860",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_581",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3860",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_590",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1968",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_593",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1968",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_602",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1969",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_605",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1969",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_614",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1970",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_617",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1970",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_626",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_629",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_638",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_641",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_650",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_653",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_662",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_800",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_665",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_800",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_674",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_677",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_686",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_689",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_698",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_803",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_701",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_803",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_710",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_713",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_722",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3075",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_725",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3075",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_734",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_804",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_737",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_804",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_746",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_749",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_758",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3076",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_761",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3076",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_770",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_805",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_773",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_805",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_782",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_785",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_794",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3077",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_797",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3077",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_806",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_806",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_809",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_806",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_818",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_821",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_830",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3078",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_833",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3078",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_842",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_807",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_845",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_807",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_854",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_857",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_866",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3079",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_869",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3079",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_878",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_808",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_881",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_808",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_890",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_893",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_902",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3080",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_905",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3080",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_914",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_809",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_917",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_809",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_926",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_929",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_938",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3081",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_941",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3081",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_950",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_810",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_953",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_810",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_962",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_965",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_974",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3082",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_977",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3082",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_986",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_811",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_989",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_811",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_998",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1001",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1010",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3083",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1013",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3083",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1022",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_812",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1025",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_812",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1034",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1037",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1046",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3084",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1049",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3084",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1058",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_813",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1061",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_813",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1070",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1073",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1082",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3085",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1085",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3085",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1094",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_814",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1097",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_814",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1106",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1109",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1118",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3086",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1121",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3086",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1130",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_815",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1133",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_815",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1142",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1145",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1154",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3087",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1157",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3087",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1166",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1169",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1178",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1181",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1190",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3088",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1193",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3088",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1202",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_817",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1205",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_817",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1214",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1217",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1226",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3089",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1229",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3089",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1238",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1241",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1250",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1253",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1262",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3090",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1265",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3090",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1274",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1277",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1286",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1289",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1298",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3091",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1301",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3091",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1310",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1313",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1322",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1325",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1334",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3092",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1337",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3092",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1346",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1349",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1358",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2837",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1361",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2837",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1370",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3093",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1373",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3093",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1382",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1385",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1394",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2838",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1397",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2838",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1406",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3094",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1409",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3094",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1418",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1421",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1430",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2839",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1433",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2839",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1442",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3095",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1445",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3095",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1454",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1457",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1466",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2840",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1469",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2840",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1478",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3096",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1481",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3096",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1490",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1493",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1502",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2841",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1505",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2841",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1514",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3097",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1517",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3097",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1526",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1529",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1538",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2842",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1541",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2842",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1550",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3098",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1553",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3098",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1562",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1565",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1574",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2843",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1577",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2843",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1586",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3099",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1589",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3099",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1598",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1601",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1610",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2844",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1613",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2844",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1622",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3100",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1625",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3100",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1634",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1637",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1646",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2845",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1649",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2845",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1658",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3101",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1661",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3101",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1670",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1673",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1682",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2846",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1685",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2846",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1694",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3102",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1697",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3102",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1706",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1709",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1718",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2847",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1721",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2847",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1730",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3103",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1733",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3103",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1742",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_774",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1745",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_774",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1754",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3072",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1757",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3072",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1766",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3074",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1769",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3074",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1778",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_256",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1781",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_256",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1790",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_324",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1793",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_324",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1802",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_260",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1805",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_260",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1814",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_320",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1817",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_320",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1826",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_322",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1829",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_322",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1838",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_323",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1841",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_323",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1850",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_384",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1853",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_384",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1862",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_321",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1865",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_321",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1874",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_261",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1877",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_261",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1886",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_262",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1889",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_262",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1898",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_771",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1901",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_771",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1910",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_770",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1913",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_770",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1922",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_928",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1925",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_928",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1934",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_930",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1937",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_930",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1946",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_944",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1949",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_944",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1958",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_945",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1961",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_945",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1970",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_946",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1973",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_946",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1982",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_947",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1985",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_947",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1994",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_948",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1997",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_948",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2006",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_949",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2009",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_949",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2018",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_950",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2021",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_950",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2030",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_951",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2033",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_951",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2042",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2045",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2054",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2057",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2066",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2069",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2078",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2081",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2090",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_956",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2093",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_956",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2102",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_957",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2105",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_957",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2114",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_958",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2117",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_958",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2126",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_959",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2129",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_959",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2138",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1985",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2141",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1985",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2150",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3858",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2153",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3858",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2162",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3857",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2165",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3857",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2174",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3859",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2177",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3859",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_14",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_16",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_18",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_20",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_22",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_47",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_49",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_51",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_53",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_55",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_67",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_69",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_71",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_73",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_75",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_77",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_MISALIGNED_FETCH",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_106",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_MISALIGNED_STORE",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_108",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_MISALIGNED_LOAD",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_110",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_STORE_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_112",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_LOAD_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_114",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_STORE_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_116",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_LOAD_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.TileResetDomain.auto.tile_trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TileResetDomain"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.FixedClockBroadcast_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_13"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_15"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_13"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.BundleBridgeNexus_14.inputs_0.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.BundleBridgeNexus_14.auto.in.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_14"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.TLPLIC",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.PLICParams",
    "params":{
      "baseAddress":201326592,
      "maxPriorities":7,
      "intStages":0,
      "maxHarts":15872
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_15",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_16",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_24",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_25",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_26",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_27",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_35",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_read_start",
    "message":"Acting priority of interrupt source 1: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_36",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_read_out",
    "message":"Acting priority of interrupt source 1: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_37",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_write_start",
    "message":"Acting priority of interrupt source 1: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_38",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_write_out",
    "message":"Acting priority of interrupt source 1: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_46",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_47",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_55",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_56",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_57",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_58",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_66",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_read_start",
    "message":"Acting priority of interrupt source 2: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_67",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_read_out",
    "message":"Acting priority of interrupt source 2: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_68",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_write_start",
    "message":"Acting priority of interrupt source 2: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_69",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_write_out",
    "message":"Acting priority of interrupt source 2: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_77",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_78",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_86",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_1_Reg_read_start",
    "message":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_87",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_1_Reg_read_out",
    "message":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_95",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_2_Reg_read_start",
    "message":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_96",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_2_Reg_read_out",
    "message":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_104",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_read_start",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_105",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_read_out",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_106",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_write_start",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_107",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_write_out",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_115",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_116",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_129",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_read_start",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_130",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_read_out",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_131",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_write_start",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_132",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_write_out",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_140",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_read_start",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_141",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_read_out",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_142",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_write_start",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_143",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_write_out",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_151",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_152",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_165",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_read_start",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_166",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_read_out",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_167",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_write_start",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_168",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_write_out",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.TLPLIC",
    "regMappingSer":{
      "displayName":"TLPLIC",
      "deviceName":"TLPLIC",
      "baseAddress":201326592,
      "regFields":[
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority_1",
          "groupDesc":"Acting priority of interrupt source 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 2",
          "group":"priority_2",
          "groupDesc":"Acting priority of interrupt source 2",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"pending_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_1",
          "groupDesc":"Enable bits for each interrupt source for target 1. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 1. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_24",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_CLAIMS",
    "message":"two claims with no intervening complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_26",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_COMPLETES",
    "message":"two completes with no intervening claim",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_30",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_INTS_PENDING",
    "message":"two enabled interrupts became pending on same cycle",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_35",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"PLIC_THRESHOLD",
    "message":"Interrupts;;interrupt pending but less than threshold",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.CLINT",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.CLINTParams",
    "params":{
      "baseAddress":33554432,
      "intStages":0
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_7",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_8",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_9",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_10",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_18",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_19",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_20",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_21",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_29",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_30",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_31",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_32",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_40",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_41",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_42",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_43",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_51",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_52",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_53",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_54",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_62",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_63",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_64",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_65",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_73",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_74",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_75",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_76",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_84",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_85",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_86",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_87",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_95",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_96",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_97",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_98",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_106",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_107",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_108",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_109",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_117",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_118",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_119",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_120",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_128",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_129",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_130",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_131",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_139",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_140",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_141",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_142",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_150",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_151",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_152",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_153",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_161",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_162",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_163",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_164",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_172",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_173",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_174",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_175",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_183",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_read_start",
    "message":"MSIP bit for Hart 0: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_184",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_read_out",
    "message":"MSIP bit for Hart 0: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_185",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_write_start",
    "message":"MSIP bit for Hart 0: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_186",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_write_out",
    "message":"MSIP bit for Hart 0: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_194",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_195",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.CLINT",
    "regMappingSer":{
      "displayName":"CLINT",
      "deviceName":"CLINT",
      "baseAddress":33554432,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"msip",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtimecmp_0_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"MTIMECMP for hart 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtimecmp_0_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtimecmp_0_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtimecmp_0_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtimecmp_0_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtimecmp_0_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtimecmp_0_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtimecmp_0_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtime_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtime_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtime_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtime_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtime_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtime_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtime_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtime_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|BundleBridgeNexus_15>outputs_0"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_16"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.BlockDeviceFrontend",
    "regMappingSer":{
      "displayName":"BlockDeviceFrontend",
      "deviceName":"BlockDeviceFrontend",
      "baseAddress":268521472,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":64,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField8_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegFieldc_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField10_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x11",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField11_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x12",
          "bitOffset":0,
          "bitWidth":2,
          "name":"unnamedRegField12_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x13",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField13_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":2,
          "name":"unnamedRegField14_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField18_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1c",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField1c_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_10"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_17"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_9",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_read_start",
    "message":"Transmit watermark interrupt enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_10",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_read_out",
    "message":"Transmit watermark interrupt enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_11",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_write_start",
    "message":"Transmit watermark interrupt enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_12",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_write_out",
    "message":"Transmit watermark interrupt enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_20",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_read_start",
    "message":"Receive watermark interrupt enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_21",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_read_out",
    "message":"Receive watermark interrupt enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_22",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_write_start",
    "message":"Receive watermark interrupt enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_23",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_write_out",
    "message":"Receive watermark interrupt enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_31",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ip_Reg_read_start",
    "message":"Transmit watermark interrupt pending: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_32",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ip_Reg_read_out",
    "message":"Transmit watermark interrupt pending: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_40",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ip_Reg_read_start",
    "message":"Receive watermark interrupt pending: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_41",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ip_Reg_read_out",
    "message":"Receive watermark interrupt pending: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_49",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_read_start",
    "message":"Transmit enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_50",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_read_out",
    "message":"Transmit enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_51",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_write_start",
    "message":"Transmit enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_52",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_write_out",
    "message":"Transmit enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_60",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_read_start",
    "message":"Number of stop bits: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_61",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_read_out",
    "message":"Number of stop bits: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_62",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_write_start",
    "message":"Number of stop bits: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_63",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_write_out",
    "message":"Number of stop bits: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_71",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_read_start",
    "message":"Transmit watermark level: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_72",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_read_out",
    "message":"Transmit watermark level: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_73",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_write_start",
    "message":"Transmit watermark level: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_74",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_write_out",
    "message":"Transmit watermark level: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_82",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_read_start",
    "message":"Receive enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_83",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_read_out",
    "message":"Receive enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_84",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_write_start",
    "message":"Receive enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_85",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_write_out",
    "message":"Receive enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_93",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_read_start",
    "message":"Receive watermark level: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_94",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_read_out",
    "message":"Receive watermark level: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_95",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_write_start",
    "message":"Receive watermark level: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_96",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_write_out",
    "message":"Receive watermark level: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_104",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_read_start",
    "message":"Baud rate divisor: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_105",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_read_out",
    "message":"Baud rate divisor: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_106",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_write_start",
    "message":"Baud rate divisor: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_107",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_write_out",
    "message":"Baud rate divisor: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_115",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_write_start",
    "message":"Transmit data: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_116",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_write_out",
    "message":"Transmit data: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_124",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_125",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_133",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"full_Reg_read_start",
    "message":"Transmit FIFO full: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_134",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"full_Reg_read_out",
    "message":"Transmit FIFO full: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_142",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_read_start",
    "message":"Receive data: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_143",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_read_out",
    "message":"Receive data: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_151",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_152",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_160",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"empty_Reg_read_start",
    "message":"Receive FIFO empty: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_161",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"empty_Reg_read_out",
    "message":"Receive FIFO empty: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.TLUART",
    "regMappingSer":{
      "displayName":"TLUART",
      "deviceName":"TLUART",
      "baseAddress":1409286144,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit enable",
          "group":"txctrl",
          "groupDesc":"Serial transmit control",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":1,
          "bitWidth":1,
          "name":"nstop",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of stop bits",
          "group":"txctrl",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"rxen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive enable",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa",
          "bitOffset":0,
          "bitWidth":9,
          "name":"txcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xe",
          "bitOffset":0,
          "bitWidth":9,
          "name":"rxcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"Serial interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"Serial interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":16,
          "name":"div",
          "resetValue":868,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Baud rate divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"FireSim.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":268521472,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "blkdev-controller@10015000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":17179869184
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"FireSim.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":268521472,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "blkdev-controller@10015000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":17179869184
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_6"
  },
  {
    "class":"midas.targetutils.FirrtlEnableModelMultiThreadingAnnotation",
    "target":"~FireSim|TileResetDomain/tile:RocketTile"
  },
  {
    "class":"midas.targetutils.FirrtlMemModelAnnotation",
    "target":"~FireSim|Rocket>rf"
  },
  {
    "class":"midas.targetutils.FirrtlMemModelAnnotation",
    "target":"~FireSim|FPU>regfile"
  },
  {
    "class":"midas.widgets.ClockBridgeAnnotation",
    "target":"~FireSim|RationalClockBridge",
    "clocks":[
      {
        "name":"implicit_clock",
        "multiplier":1,
        "divisor":1
      }
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"clocks",
    "channelInfo":{
      "class":"midas.passes.fame.TargetClockChannel",
      "clockInfo":[
        {
          "name":"implicit_clock",
          "multiplier":1,
          "divisor":1
        }
      ]
    },
    "sinks":[
      "~FireSim|RationalClockBridge>clocks[0]"
    ]
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.TLRAM.mem",
    "address_width":9,
    "name":"mem",
    "data_width":64,
    "depth":512,
    "description":"mem",
    "write_mask_granularity":8
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_6",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_no_data_error",
    "message":"Ecc Covers <mem_active> X <no_data_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_7",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_data_correctable_error_not_reported",
    "message":"Ecc Covers <mem_active> X <data_correctable_error_not_reported>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_8",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_data_uncorrectable_error_reported",
    "message":"Ecc Covers <mem_active> X <data_uncorrectable_error_reported>",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_9"
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|SerialBridge",
    "channelNames":[
      "reset",
      "serial_in_fwd",
      "serial_in_rev",
      "serial_out_fwd",
      "serial_out_rev"
    ],
    "widgetClass":"firesim.bridges.SerialBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.SerialBridgeParams",
      "memoryRegionNameOpt":"MainMemory_0"
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_out_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|SerialBridge>serial.out.ready",
      "validSource":"~FireSim|SerialBridge>serial.out.valid"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>serial.out.valid",
      "~FireSim|SerialBridge>serial.out.bits"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_out_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sinks":[
      "~FireSim|SerialBridge>serial.out.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_in_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|SerialBridge>serial.in.ready",
      "validSink":"~FireSim|SerialBridge>serial.in.valid"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sinks":[
      "~FireSim|SerialBridge>serial.in.valid",
      "~FireSim|SerialBridge>serial.in.bits"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_in_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>serial.in.ready"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|FASEDBridge",
    "channelNames":[
      "reset",
      "axi4_r_fwd",
      "axi4_r_rev",
      "axi4_b_fwd",
      "axi4_b_rev",
      "axi4_ar_fwd",
      "axi4_ar_rev",
      "axi4_w_fwd",
      "axi4_w_rev",
      "axi4_aw_fwd",
      "axi4_aw_rev"
    ],
    "widgetClass":"midas.models.FASEDMemoryTimingModel",
    "widgetConstructorKey":{
      "class":"midas.models.CompleteConfig",
      "userProvided":{
        "class":"midas.models.LatencyPipeConfig",
        "params":{
          "maxReads":16,
          "maxWrites":16,
          "maxReadLength":256,
          "maxWriteLength":256,
          "detectAddressCollisions":false,
          "stallEventCounters":false,
          "localHCycleCount":false,
          "latencyHistograms":false,
          "xactionCounters":true,
          "beatCounters":true,
          "targetCycleCounter":false,
          "occupancyHistograms":[
            0,
            2,
            4,
            8
          ],
          "addrRangeCounters":0
        }
      },
      "axi4Widths":{
        "dataBits":64,
        "addrBits":35,
        "idBits":4
      },
      "axi4Edge":{
        "maxReadTransfer":8,
        "maxWriteTransfer":8,
        "idReuse":1,
        "maxFlight":10,
        "address":[
          {
            "base":2147483648,
            "mask":2147483647
          },
          {
            "base":4294967296,
            "mask":4294967295
          },
          {
            "base":8589934592,
            "mask":8589934591
          },
          {
            "base":17179869184,
            "mask":2147483647
          }
        ]
      },
      "memoryRegionName":"MainMemory_0"
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_ar_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.ar.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.ar.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.ar.valid",
      "~FireSim|FASEDBridge>axi4.ar.bits.user",
      "~FireSim|FASEDBridge>axi4.ar.bits.id",
      "~FireSim|FASEDBridge>axi4.ar.bits.region",
      "~FireSim|FASEDBridge>axi4.ar.bits.qos",
      "~FireSim|FASEDBridge>axi4.ar.bits.prot",
      "~FireSim|FASEDBridge>axi4.ar.bits.cache",
      "~FireSim|FASEDBridge>axi4.ar.bits.lock",
      "~FireSim|FASEDBridge>axi4.ar.bits.burst",
      "~FireSim|FASEDBridge>axi4.ar.bits.size",
      "~FireSim|FASEDBridge>axi4.ar.bits.len",
      "~FireSim|FASEDBridge>axi4.ar.bits.addr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_ar_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.ar.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_w_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.w.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.w.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.w.valid",
      "~FireSim|FASEDBridge>axi4.w.bits.user",
      "~FireSim|FASEDBridge>axi4.w.bits.strb",
      "~FireSim|FASEDBridge>axi4.w.bits.id",
      "~FireSim|FASEDBridge>axi4.w.bits.last",
      "~FireSim|FASEDBridge>axi4.w.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_w_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.w.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_aw_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.aw.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.aw.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.aw.valid",
      "~FireSim|FASEDBridge>axi4.aw.bits.user",
      "~FireSim|FASEDBridge>axi4.aw.bits.id",
      "~FireSim|FASEDBridge>axi4.aw.bits.region",
      "~FireSim|FASEDBridge>axi4.aw.bits.qos",
      "~FireSim|FASEDBridge>axi4.aw.bits.prot",
      "~FireSim|FASEDBridge>axi4.aw.bits.cache",
      "~FireSim|FASEDBridge>axi4.aw.bits.lock",
      "~FireSim|FASEDBridge>axi4.aw.bits.burst",
      "~FireSim|FASEDBridge>axi4.aw.bits.size",
      "~FireSim|FASEDBridge>axi4.aw.bits.len",
      "~FireSim|FASEDBridge>axi4.aw.bits.addr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_aw_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.aw.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_r_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|FASEDBridge>axi4.r.ready",
      "validSink":"~FireSim|FASEDBridge>axi4.r.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.r.valid",
      "~FireSim|FASEDBridge>axi4.r.bits.user",
      "~FireSim|FASEDBridge>axi4.r.bits.id",
      "~FireSim|FASEDBridge>axi4.r.bits.last",
      "~FireSim|FASEDBridge>axi4.r.bits.data",
      "~FireSim|FASEDBridge>axi4.r.bits.resp"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_r_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.r.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_b_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|FASEDBridge>axi4.b.ready",
      "validSink":"~FireSim|FASEDBridge>axi4.b.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.b.valid",
      "~FireSim|FASEDBridge>axi4.b.bits.user",
      "~FireSim|FASEDBridge>axi4.b.bits.id",
      "~FireSim|FASEDBridge>axi4.b.bits.resp"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_b_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.b.ready"
    ]
  },
  {
    "class":"firrtl.passes.wiring.SourceAnnotation",
    "target":"FireSim.FixedClockBroadcast_1.in.clock",
    "pin":"inclock"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|FixedClockBroadcast_1>in.clock"
  },
  {
    "class":"firrtl.transforms.NoDedupAnnotation",
    "target":"~FireSim|FixedClockBroadcast_1"
  },
  {
    "class":"firrtl.passes.wiring.SinkAnnotation",
    "target":"FireSim.FireSim._WIRE",
    "pin":"inclock"
  },
  {
    "class":"firrtl.transforms.NoDedupAnnotation",
    "target":"~FireSim|FireSim"
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|UARTBridge",
    "channelNames":[
      "reset",
      "uart_txd",
      "uart_rxd"
    ],
    "widgetClass":"firesim.bridges.UARTBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.UARTKey",
      "uParams":{
        "address":1409286144,
        "dataBits":8,
        "stopBits":2,
        "divisorBits":16,
        "oversample":4,
        "nSamples":3,
        "nTxEntries":256,
        "nRxEntries":256,
        "includeFourWire":false,
        "includeParity":false,
        "includeIndependentParity":false,
        "initBaudRate":3686400
      },
      "div":868
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sources":[
      "~FireSim|UARTBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"uart_txd",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sources":[
      "~FireSim|UARTBridge>uart.txd"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"uart_rxd",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sinks":[
      "~FireSim|UARTBridge>uart.rxd"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|BlockDevBridge",
    "channelNames":[
      "reset",
      "bdev_info_max_req_len",
      "bdev_info_nsectors",
      "bdev_resp_fwd",
      "bdev_resp_rev",
      "bdev_data_fwd",
      "bdev_data_rev",
      "bdev_req_fwd",
      "bdev_req_rev"
    ],
    "widgetClass":"firesim.bridges.BlockDevBridgeModule",
    "widgetConstructorKey":{
      "class":"testchipip.BlockDeviceConfig",
      "nTrackers":1
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_info_max_req_len",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.info.max_req_len"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_info_nsectors",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.info.nsectors"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_data_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|BlockDevBridge>bdev.data.ready",
      "validSource":"~FireSim|BlockDevBridge>bdev.data.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.data.valid",
      "~FireSim|BlockDevBridge>bdev.data.bits.tag",
      "~FireSim|BlockDevBridge>bdev.data.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_data_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.data.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_req_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|BlockDevBridge>bdev.req.ready",
      "validSource":"~FireSim|BlockDevBridge>bdev.req.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.req.valid",
      "~FireSim|BlockDevBridge>bdev.req.bits.tag",
      "~FireSim|BlockDevBridge>bdev.req.bits.len",
      "~FireSim|BlockDevBridge>bdev.req.bits.offset",
      "~FireSim|BlockDevBridge>bdev.req.bits.write"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_req_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.req.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_resp_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|BlockDevBridge>bdev.resp.ready",
      "validSink":"~FireSim|BlockDevBridge>bdev.resp.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.resp.valid",
      "~FireSim|BlockDevBridge>bdev.resp.bits.tag",
      "~FireSim|BlockDevBridge>bdev.resp.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_resp_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.resp.ready"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|TracerVBridge",
    "channelNames":[
      "trace_insns_0_tval",
      "trace_insns_0_cause",
      "trace_insns_0_interrupt",
      "trace_insns_0_exception",
      "trace_insns_0_priv",
      "trace_insns_0_insn",
      "trace_insns_0_iaddr",
      "trace_insns_0_valid",
      "trace_reset",
      "triggerDebit",
      "triggerCredit"
    ],
    "widgetClass":"firesim.bridges.TracerVBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.TracerVKey",
      "insnWidths":{
        "iaddr":40,
        "insn":32,
        "cause":64,
        "tval":40
      },
      "vecSize":1
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_tval",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].tval"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_cause",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].cause"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_interrupt",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].interrupt"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_exception",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].exception"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_priv",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].priv"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_insn",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].insn"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_iaddr",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].iaddr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_valid",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].valid"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"triggerDebit",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sinks":[
      "~FireSim|TracerVBridge>triggerDebit"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"triggerCredit",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sinks":[
      "~FireSim|TracerVBridge>triggerCredit"
    ]
  },
  {
    "class":"midas.targetutils.TriggerSourceAnnotation",
    "target":"~FireSim|FireSim>_WIRE_1",
    "clock":"~FireSim|FireSim>_WIRE_3",
    "sourceType":true
  },
  {
    "class":"midas.targetutils.TriggerSourceAnnotation",
    "target":"~FireSim|FireSim>_WIRE_2",
    "clock":"~FireSim|FireSim>_WIRE_4",
    "sourceType":false
  },
  {
    "class":"firrtl.stage.RunFirrtlTransformAnnotation",
    "transform":"firrtl.passes.wiring.WiringTransform"
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|PeekPokeBridge",
    "channelNames":[
      "reset"
    ],
    "widgetClass":"midas.widgets.PeekPokeBridgeModule",
    "widgetConstructorKey":{
      "class":"midas.widgets.PeekPokeKey",
      "peeks":[
        
      ],
      "pokes":[
        {
          "name":"reset",
          "tpe":{
            "typeString":"UInt"
          },
          "fieldWidth":1
        }
      ],
      "maxChannelDecoupling":2
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":0
    },
    "clock":"~FireSim|PeekPokeBridge>clock",
    "sinks":[
      "~FireSim|PeekPokeBridge>reset"
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.InterruptBusWrapper"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_4",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_12",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_13",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_14",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_19",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>allIDs_FIFOed_1",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_28",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_29",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer>_T_30",
    "clock":"~FireSim|TLFIFOFixer>clock",
    "reset":"~FireSim|TLFIFOFixer>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_1"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_4",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_16",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_17",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_1>_T_18",
    "clock":"~FireSim|TLFIFOFixer_1>clock",
    "reset":"~FireSim|TLFIFOFixer_1>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_2"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_4"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_4",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_11",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_12",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_2>_T_13",
    "clock":"~FireSim|TLFIFOFixer_2>clock",
    "reset":"~FireSim|TLFIFOFixer_2>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_3"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_4",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_16",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_17",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_3>_T_18",
    "clock":"~FireSim|TLFIFOFixer_3>clock",
    "reset":"~FireSim|TLFIFOFixer_3>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_3"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLInterconnectCoupler_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_4"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_4"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_4",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER FIFOFIXER STALL",
    "message":"Cover: Stall occured for a valid transaction",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>allIDs_FIFOed",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER all sources",
    "message":"Cover: FIFOFIXER covers all Source IDs",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_20",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER empty",
    "message":"Cover: FIFO is empty",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_21",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER at least one push",
    "message":"Cover: At least one Source ID is pushed",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLFIFOFixer_4>_T_22",
    "clock":"~FireSim|TLFIFOFixer_4>clock",
    "reset":"~FireSim|TLFIFOFixer_4>reset",
    "label":"COVER at least one pop",
    "message":"Cover: At least one Source ID is popped",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSink>clock",
    "reset":"~FireSim|TLAsyncCrossingSink>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLSourceShrinker"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_6"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSource>clock",
    "reset":"~FireSim|TLAsyncCrossingSource>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLSourceShrinker_1"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroupAggregator_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.FixedClockBroadcast_5"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_5"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_9",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush64_Reg_write_start",
    "message":"Flush the phsyical address equal to the 64-bit written data from the cache: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_10",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush64_Reg_write_out",
    "message":"Flush the phsyical address equal to the 64-bit written data from the cache: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_22",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush32_Reg_write_start",
    "message":"Flush the physical address equal to the 32-bit written data << 4 from the cache: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_23",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Flush32_Reg_write_out",
    "message":"Flush the physical address equal to the 32-bit written data << 4 from the cache: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_33",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Banks_Reg_read_start",
    "message":"Number of banks in the cache: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_34",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Banks_Reg_read_out",
    "message":"Number of banks in the cache: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_42",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Ways_Reg_read_start",
    "message":"Number of ways per bank: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_43",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"Ways_Reg_read_out",
    "message":"Number of ways per bank: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_51",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgSets_Reg_read_start",
    "message":"Base-2 logarithm of the sets per bank: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_52",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgSets_Reg_read_out",
    "message":"Base-2 logarithm of the sets per bank: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_60",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgBlockBytes_Reg_read_start",
    "message":"Base-2 logarithm of the bytes per cache block: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|InclusiveCache>_out_T_61",
    "clock":"~FireSim|InclusiveCache>clock",
    "reset":"~FireSim|InclusiveCache>reset",
    "label":"lgBlockBytes_Reg_read_out",
    "message":"Base-2 logarithm of the bytes per cache block: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.InclusiveCache",
    "regMappingSer":{
      "displayName":"InclusiveCache",
      "deviceName":"InclusiveCache",
      "baseAddress":33619968,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"Banks",
          "resetValue":1,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of banks in the cache",
          "group":"Config",
          "groupDesc":"Information about the Cache Configuration",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":8,
          "name":"Ways",
          "resetValue":8,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of ways per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":16,
          "bitWidth":8,
          "name":"lgSets",
          "resetValue":10,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the sets per bank",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":24,
          "bitWidth":8,
          "name":"lgBlockBytes",
          "resetValue":6,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Base-2 logarithm of the bytes per cache block",
          "group":"Config",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200",
          "bitOffset":0,
          "bitWidth":64,
          "name":"Flush64",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the phsyical address equal to the 64-bit written data from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x240",
          "bitOffset":0,
          "bitWidth":32,
          "name":"Flush32",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Flush the physical address equal to the 32-bit written data << 4 from the cache",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceA>_T_1",
    "clock":"~FireSim|SourceA>clock",
    "reset":"~FireSim|SourceA>reset",
    "label":"CCACHE_L2_SOURCEA_STALL",
    "message":"MemorySystem;;Backpressured when issuing an Acquire",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceB>_T_9",
    "clock":"~FireSim|SourceB>clock",
    "reset":"~FireSim|SourceB>reset",
    "label":"CCACHE_L2_SOURCEB_STALL",
    "message":"MemorySystem;;Backpressured when issuing a probe",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_11",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_HAZARD",
    "message":"MemorySystem;;Prevented Eviction data hazard with backpressure",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_13",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceC>_T_22",
    "clock":"~FireSim|SourceC>clock",
    "reset":"~FireSim|SourceC>reset",
    "label":"CCACHE_L2_SOURCEC_QUEUE_FULL",
    "message":"MemorySystem;;Eviction queue fully utilized",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>s1_block_r",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_SRAM_HOLD",
    "message":"MemorySystem;;SRAM read-out successful, but stalled by stage 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_BYPASS_HOLD",
    "message":"MemorySystem;;Bypass match successful, but stalled by stage 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_3",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_NO_MODIFY",
    "message":"MemorySystem;;Transaction servicable without SRAM",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_5",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_READ_STALL",
    "message":"MemorySystem;;Data readout stalled",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_11",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_QUEUE_FULL",
    "message":"MemorySystem;;Filled SRAM skidpad queue completely",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_15",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_1_STALL",
    "message":"MemorySystem;;Stage 1 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_17",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_PUTA_STALL",
    "message":"MemorySystem;;Channel A put buffer was not ready in time",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_19",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_PUTC_STALL",
    "message":"MemorySystem;;Channel C put buffer was not ready in time",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_22",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_2_STALL",
    "message":"MemorySystem;;Stage 2 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_32",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_3_STALL",
    "message":"MemorySystem;;Stage 3 pipeline blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_40",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_WRITEBACK_STALL",
    "message":"MemorySystem;;Data writeback stalled",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_44",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MIN",
    "message":"MemorySystem;;Evaluated a signed minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_48",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MAX",
    "message":"MemorySystem;;Evaluated a signed maximum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_52",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MINU",
    "message":"MemorySystem;;Evaluated an unsigned minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_56",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_MAXU",
    "message":"MemorySystem;;Evaluated an unsigned minimum atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_60",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_ADD",
    "message":"MemorySystem;;Evaluated an addition atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_64",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_XOR",
    "message":"MemorySystem;;Evaluated a bitwise XOR atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_68",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_OR",
    "message":"MemorySystem;;Evaluated a bitwise OR atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_72",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_AND",
    "message":"MemorySystem;;Evaluated a bitwise AND atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_76",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_4_ATOMIC_SWAP",
    "message":"MemorySystem;;Evaluated a bitwise SWAP atomic",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_81",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_0",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_84",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_1",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_87",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_2",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_90",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_3",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_93",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_4",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_96",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_5",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_99",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_6",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceD>_T_102",
    "clock":"~FireSim|SourceD>clock",
    "reset":"~FireSim|SourceD>reset",
    "label":"CCACHE_L2_SOURCED_BYPASS_CASE_7",
    "message":"MemorySystem;;Bypass data from all subsets of pipeline stages",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SourceX>_T_1",
    "clock":"~FireSim|SourceX>clock",
    "reset":"~FireSim|SourceX>reset",
    "label":"CCACHE_L2_SOURCEX_STALL",
    "message":"MemorySystem;;Backpressure when sending a control message",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_REQ_STALL",
    "message":"MemorySystem;;No MSHR available to sink request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T_1",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_BUF_STALL",
    "message":"MemorySystem;;No space in putbuffer for beat",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkA>_T_2",
    "clock":"~FireSim|SinkA>clock",
    "reset":"~FireSim|SinkA>reset",
    "label":"CCACHE_L2_SINKA_SET_STALL",
    "message":"MemorySystem;;No space in putbuffer for request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_7",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_10",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_REQ_STALL",
    "message":"MemorySystem;;No MSHR available to sink request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_13",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_BUF_STALL",
    "message":"MemorySystem;;No space in putbuffer for beat",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkC>_T_16",
    "clock":"~FireSim|SinkC>clock",
    "reset":"~FireSim|SinkC>reset",
    "label":"CCACHE_L2_SINKC_SET_STALL",
    "message":"MemorySystem;;No space in putbuffer for request",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkD>_T_3",
    "clock":"~FireSim|SinkD>clock",
    "reset":"~FireSim|SinkD>reset",
    "label":"CCACHE_L2_SINKD_HAZARD",
    "message":"MemorySystem;;Prevented Grant data hazard with backpressure",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkD>_T_5",
    "clock":"~FireSim|SinkD>clock",
    "reset":"~FireSim|SinkD>reset",
    "label":"CCACHE_L2_SINKD_SRAM_STALL",
    "message":"MemorySystem;;Data SRAM busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|SinkX>_T_1",
    "clock":"~FireSim|SinkX>clock",
    "reset":"~FireSim|SinkX>reset",
    "label":"CCACHE_L2_SINKX_STALL",
    "message":"MemorySystem;;Backpressure when accepting a control message",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.Directory.cc_dir",
    "address_width":10,
    "name":"cc_dir",
    "data_width":184,
    "depth":1024,
    "description":"Directory RAM",
    "write_mask_granularity":23
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Directory>_T_103",
    "clock":"~FireSim|Directory>clock",
    "reset":"~FireSim|Directory>reset",
    "label":"CCACHE_L2_DIRECTORY_HIT_BYPASS",
    "message":"MemorySystem;;Bypassing write to a directory hit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Directory>_T_107",
    "clock":"~FireSim|Directory>clock",
    "reset":"~FireSim|Directory>reset",
    "label":"CCACHE_L2_DIRECTORY_EVICT_BYPASS",
    "message":"MemorySystem;;Bypassing a write to a directory eviction",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_0",
    "address_width":14,
    "name":"cc_banks_0",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_1",
    "address_width":14,
    "name":"cc_banks_1",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_2",
    "address_width":14,
    "name":"cc_banks_2",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.BankedStore.cc_banks_3",
    "address_width":14,
    "name":"cc_banks_3",
    "data_width":64,
    "depth":16384,
    "description":"Banked Store",
    "write_mask_granularity":64
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_79",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_80",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_81",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_82",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_83",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_84",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_85",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_86",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_87",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_88",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_89",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_90",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_110",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_127",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_130",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_280",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_290",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_321",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_324",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_334",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_393",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_431",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_441",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_465",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_468",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_471",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_474",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_477",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_515",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_518",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_527",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_530",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_532",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_533",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_543",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_546",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_549",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_560",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_561",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_562",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_563",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_564",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR>_T_565",
    "clock":"~FireSim|MSHR>clock",
    "reset":"~FireSim|MSHR>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_79",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_80",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_81",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_82",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_83",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_84",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_85",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_86",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_87",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_88",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_89",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_90",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_110",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_127",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_130",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_280",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_290",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_321",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_324",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_334",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_393",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_431",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_441",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_465",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_468",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_471",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_474",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_477",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_515",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_518",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_527",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_530",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_532",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_533",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_543",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_546",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_549",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_560",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_561",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_562",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_563",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_564",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_1>_T_565",
    "clock":"~FireSim|MSHR_1>clock",
    "reset":"~FireSim|MSHR_1>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_79",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_80",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_81",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_82",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_83",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_84",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_85",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_86",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_87",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_88",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_89",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_90",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_110",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_127",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_130",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_280",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_290",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_321",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_324",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_334",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_393",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_431",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_441",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_465",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_468",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_471",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_474",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_477",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_515",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_518",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_527",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_530",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_532",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_533",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_543",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_546",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_549",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_560",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_561",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_562",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_563",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_564",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_2>_T_565",
    "clock":"~FireSim|MSHR_2>clock",
    "reset":"~FireSim|MSHR_2>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_79",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_80",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_81",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_82",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_83",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_84",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_85",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_86",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_87",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_88",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_89",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_90",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_110",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_127",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_130",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_280",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_290",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_321",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_324",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_334",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_393",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_431",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_441",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_465",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_468",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_471",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_474",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_477",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_515",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_518",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_527",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_530",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_532",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_533",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_543",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_546",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_549",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_560",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_561",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_562",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_563",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_564",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_3>_T_565",
    "clock":"~FireSim|MSHR_3>clock",
    "reset":"~FireSim|MSHR_3>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_79",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_80",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_81",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_82",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_83",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_84",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_85",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_86",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_87",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_88",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_89",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_90",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_110",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_127",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_130",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_280",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_290",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_321",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_324",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_334",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_393",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_431",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_441",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_465",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_468",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_471",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_474",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_477",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_515",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_518",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_527",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_530",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_532",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_533",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_543",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_546",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_549",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_560",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_561",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_562",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_563",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_564",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_4>_T_565",
    "clock":"~FireSim|MSHR_4>clock",
    "reset":"~FireSim|MSHR_4>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_79",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_80",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_81",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_82",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_83",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_84",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_85",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_86",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_87",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_88",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_89",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_90",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_110",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_127",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_130",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_280",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_290",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_321",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_324",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_334",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_393",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_431",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_441",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_465",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_468",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_471",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_474",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_477",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_515",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_518",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_527",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_530",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_532",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_533",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_543",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_546",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_549",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_560",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_561",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_562",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_563",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_564",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_5>_T_565",
    "clock":"~FireSim|MSHR_5>clock",
    "reset":"~FireSim|MSHR_5>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_79",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_EVICT",
    "message":"MemorySystem;;State transition from S_TIP to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_80",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_81",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_82",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_83",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_84",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_85",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_EVICT",
    "message":"MemorySystem;;State transition from S_TIP_D to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_86",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_FLUSH",
    "message":"MemorySystem;;State transition from S_TIP_D to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_87",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_C to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_88",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_C to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_89",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_EVICT",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to evicted (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_90",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_FLUSH",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to flushed (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_110",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_127",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TIP_D",
    "message":"MemorySystem;;State transition from S_INVALID to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_130",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_INVALID to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_280",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_290",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_321",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_324",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_334",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_S_TRUNK_C",
    "message":"MemorySystem;;State transition from S_TIP_C to S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_393",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_D to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_431",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_441",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TIP_CD to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_465",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_468",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_C",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_471",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_474",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_477",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_S_TRUNK_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_C to S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_515",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_D",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_518",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_S_TIP_CD",
    "message":"MemorySystem;;State transition from S_TRUNK_CD to S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_527",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_FULL",
    "message":"MemorySystem;;Client downgraded to N when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_530",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_HALF",
    "message":"MemorySystem;;Client downgraded to B when asked only to do B",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_532",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_SERIAL",
    "message":"MemorySystem;;Sequential routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_533",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_PROBE_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of probe response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_543",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_GRANT_WORMHOLE",
    "message":"MemorySystem;;Wormhole routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_546",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_GRANT_SERIAL",
    "message":"MemorySystem;;Sequential routing of grant response data",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_549",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_INVALID_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_INVALID (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_560",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_561",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_562",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_563",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TIP_D_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TIP_D (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_564",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_C_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_C (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|MSHR_6>_T_565",
    "clock":"~FireSim|MSHR_6>clock",
    "reset":"~FireSim|MSHR_6>reset",
    "label":"CCACHE_L2_MSHR_S_TRUNK_CD_BYPASS",
    "message":"MemorySystem;;State bypass transition from S_TRUNK_CD (false,true,true,false,true)",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_3",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_ABC_INTERLOCK",
    "message":"MemorySystem;;ABC MSHR interlocked due to pre-emption",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_5",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_BLOCKC",
    "message":"MemorySystem;;Interlock C request while resolving set conflict",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_6",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_NESTC",
    "message":"MemorySystem;;Priority escalation from channel C",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_7",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_SECONDARY",
    "message":"MemorySystem;;Enqueue secondary miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_9",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_BYPASS",
    "message":"MemorySystem;;Bypass new request directly to conflicting MSHR",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_11",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_RELOAD",
    "message":"MemorySystem;;Back-to-back service of two requests",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Scheduler>_T_13",
    "clock":"~FireSim|Scheduler>clock",
    "reset":"~FireSim|Scheduler>reset",
    "label":"CCACHE_L2_SCHEDULER_POP",
    "message":"MemorySystem;;Service of a secondary miss",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLFilter"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_12"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLJbar"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSource_1>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSource_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSource_1>reset",
    "label":"TL_ASYNC_CROSSING_SOURCE_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSource Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_7"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_8"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_9"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_10"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_11"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_12"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>io.cpu.resp"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>io.cpu.s1_data"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_1",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_2",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_3",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_4",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_6",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_8",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_10",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_12",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_14",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_16",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_21",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_25",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_30",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_34",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_39",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_43",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_45",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_46",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_47",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_48",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_49",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_51",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_53",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_55",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_57",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_59",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_61",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_66",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_70",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_75",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_79",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_84",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_88",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_90",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_91",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_92",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_93",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_94",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_96",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_98",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_100",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_102",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_104",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_106",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_111",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_115",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_120",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_124",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_129",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_133",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_135",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_136",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_137",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_138",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_139",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_141",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_143",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_145",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_147",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_149",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_151",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_156",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_160",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_165",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_169",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_174",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_178",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_180",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_181",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_182",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_183",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_184",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_186",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_188",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_190",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_192",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_194",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_196",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_201",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_205",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_210",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_214",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_219",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_223",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_225",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_226",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_227",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_228",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_229",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_231",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_233",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_235",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_237",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_239",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_241",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_246",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_250",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_255",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_259",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_264",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_268",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_270",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_271",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_272",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_273",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_274",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_276",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_278",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_280",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_282",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_284",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_286",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_291",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_295",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_300",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_304",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_309",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_313",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_315",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_316",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_317",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_318",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_319",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_321",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_323",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_325",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_327",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_329",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_331",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_336",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_340",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_345",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_349",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_354",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker>_res_T_358",
    "clock":"~FireSim|PMPChecker>clock",
    "reset":"~FireSim|PMPChecker>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1327",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1329",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1330",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1334",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1337",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1340",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>_T_1342",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB>multipleHits",
    "clock":"~FireSim|TLB>clock",
    "reset":"~FireSim|TLB>reset",
    "label":"DTLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_1",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_2",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_3",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_4",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_6",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_8",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_10",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_12",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_14",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_16",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_21",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_25",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_30",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_34",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_39",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_43",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_45",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_46",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_47",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_48",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_49",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_51",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_53",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_55",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_57",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_59",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_61",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_66",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_70",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_75",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_79",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_84",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_88",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_90",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_91",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_92",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_93",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_94",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_96",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_98",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_100",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_102",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_104",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_106",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_111",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_115",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_120",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_124",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_129",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_133",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_135",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_136",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_137",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_138",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_139",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_141",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_143",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_145",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_147",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_149",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_151",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_156",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_160",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_165",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_169",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_174",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_178",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_180",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_181",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_182",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_183",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_184",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_186",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_188",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_190",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_192",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_194",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_196",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_201",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_205",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_210",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_214",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_219",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_223",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_225",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_226",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_227",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_228",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_229",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_231",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_233",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_235",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_237",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_239",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_241",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_246",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_250",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_255",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_259",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_264",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_268",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_270",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_271",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_272",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_273",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_274",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_276",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_278",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_280",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_282",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_284",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_286",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_291",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_295",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_300",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_304",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_309",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_313",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_315",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_316",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_317",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_318",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_319",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_321",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_323",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_325",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_327",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_329",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_331",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_336",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_340",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_345",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_349",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_354",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_1>_res_T_358",
    "clock":"~FireSim|PMPChecker_1>clock",
    "reset":"~FireSim|PMPChecker_1>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1327",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1329",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1330",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1334",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1337",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1340",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>_T_1342",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCacheModuleImpl_Anon>multipleHits",
    "clock":"~FireSim|DCacheModuleImpl_Anon>clock",
    "reset":"~FireSim|DCacheModuleImpl_Anon>reset",
    "label":"DTLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon_1"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.DCache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":100,
    "depth":64,
    "description":"DCache Tag Array",
    "write_mask_granularity":25
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.DCacheDataArray.data_arrays_0",
    "address_width":9,
    "name":"data_arrays_0",
    "data_width":256,
    "depth":512,
    "description":"DCache Data Array",
    "write_mask_granularity":8
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.DCacheModuleImpl_Anon_2"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>s2_valid_cached_miss"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|DCache>s2_victim_dirty"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>pstore_drain_structural",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_STORE_STRUCTURAL_HAZARD",
    "message":"MemorySystem;;D$ read-modify-write structural hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_260",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_STORE_DRAIN_ON_MISS",
    "message":"MemorySystem;;D$ store buffer drain on miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_261",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_WAW_HAZARD",
    "message":"MemorySystem;;D$ write-after-write hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_296",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_BLOCK_D",
    "message":"MemorySystem;;D$ D-channel blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_318",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_BLOCK_B",
    "message":"MemorySystem;;D$ B-channel blocked",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_325",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_TAG_ECC_ERROR_DURING_FENCE_I",
    "message":"MemorySystem;;D$ ECC error in tag array during cache flush",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_327",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_DATA_ECC_ERROR_DURING_FENCE_I",
    "message":"MemorySystem;;D$ ECC error in data array during cache flush",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_331",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_D_ERROR_CACHED",
    "message":"MemorySystem;;D$ D-channel error, cached",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_333",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"DCACHE_D_ERROR_UNCACHED",
    "message":"MemorySystem;;D$ D-channel error, uncached",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_355",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_356",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_357",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_358",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_359",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_360",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"no_data_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <no_data_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_373",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_374",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_375",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_376",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_377",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_378",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_correctable_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_correctable_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_391",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_392",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_393",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_clean_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_clean> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_394",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_no_tag_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <no_tag_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_395",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_tag_correctable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <tag_correctable_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|DCache>_T_396",
    "clock":"~FireSim|DCache>gated_clock",
    "reset":"~FireSim|DCache>reset",
    "label":"data_uncorrectable_error_data_dirty_never_flush_tag_uncorrectable_error",
    "message":"MemorySystem;;Cache Memory Bit Flip Cross Covers <data_uncorrectable_error> X <data_dirty> X <never_flush> X <tag_uncorrectable_error>",
    "coverGenerated":true
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|ICache>s1_hit"
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.tag_array",
    "address_width":6,
    "name":"tag_array",
    "data_width":96,
    "depth":64,
    "description":"ICache Tag Array",
    "write_mask_granularity":24
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>refillError",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_D_CORRUPT",
    "message":"MemorySystem;;I$ D-channel corrupt",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.data_arrays_0",
    "address_width":9,
    "name":"data_arrays_0",
    "data_width":128,
    "depth":512,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.ICache.data_arrays_1",
    "address_width":9,
    "name":"data_arrays_1",
    "data_width":128,
    "depth":512,
    "description":"ICache Data Array",
    "write_mask_granularity":32
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_50",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_MISS_A_STALL",
    "message":"MemorySystem;;I$ miss blocked by A-channel",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_51",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"ICACHE_FLUSH_DURING_MISS",
    "message":"MemorySystem;;I$ flushed during miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_130",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_131",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_132",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_135",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_no_data_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <no_data_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_138",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_139",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_140",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_143",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_correctable_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_correctable_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_146",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_CPU_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_CPU> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_147",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_148",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_no_tag_error_from_TL_ITIM_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <no_tag_error> X <from_TL> X <ITIM_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|ICache>_T_151",
    "clock":"~FireSim|ICache>clock",
    "reset":"~FireSim|ICache>reset",
    "label":"mem_active_data_uncorrectable_error_tag_error_from_CPU_cache_mode",
    "message":"MemorySystem;;Memory Bit Flip Cross Covers <mem_active> X <data_uncorrectable_error> X <tag_error> X <from_CPU> X <cache_mode>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_1",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_2",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_3",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_4",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_6",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_8",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_10",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_12",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_14",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_16",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_21",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_25",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_30",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_34",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_39",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_43",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_45",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_46",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_47",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_48",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_49",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_51",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_53",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_55",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_57",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_59",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_61",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_66",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_70",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_75",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_79",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_84",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_88",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_90",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_91",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_92",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_93",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_94",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_96",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_98",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_100",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_102",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_104",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_106",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_111",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_115",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_120",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_124",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_129",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_133",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_135",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_136",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_137",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_138",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_139",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_141",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_143",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_145",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_147",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_149",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_151",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_156",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_160",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_165",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_169",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_174",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_178",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_180",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_181",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_182",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_183",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_184",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_186",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_188",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_190",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_192",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_194",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_196",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_201",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_205",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_210",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_214",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_219",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_223",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_225",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_226",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_227",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_228",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_229",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_231",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_233",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_235",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_237",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_239",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_241",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_246",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_250",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_255",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_259",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_264",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_268",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_270",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_271",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_272",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_273",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_274",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_276",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_278",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_280",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_282",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_284",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_286",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_291",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_295",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_300",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_304",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_309",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_313",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_315",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to no access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_316",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to TOR access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_317",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NA4 access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_318",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg access is set to NAPOT access ",
    "message":"Cover PMP access mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_319",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The cfg lock is set to high ",
    "message":"Cover PMP lock mode setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_321",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to no access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_323",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RO access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_325",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RW access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_327",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to X access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_329",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_331",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The permission is set to RWX access ",
    "message":"Cover PMP access permission setting",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_336",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_340",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches TOR mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_345",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_349",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NA4 mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_354",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode ",
    "message":"Cover PMP access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PMPChecker_2>_res_T_358",
    "clock":"~FireSim|PMPChecker_2>clock",
    "reset":"~FireSim|PMPChecker_2>reset",
    "label":"The access matches NAPOT mode with lock bit high",
    "message":"Cover PMP access with lock bit",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1327",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_MISS",
    "message":"MemorySystem;;TLB miss",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1329",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_PTW_STALL",
    "message":"MemorySystem;;TLB miss, but PTW busy",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1330",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_DURING_REFILL",
    "message":"MemorySystem;;flush TLB during TLB refill",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1334",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_ALL",
    "message":"MemorySystem;;flush TLB",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1337",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_ASID",
    "message":"MemorySystem;;flush TLB ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1340",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_LINE",
    "message":"MemorySystem;;flush TLB line",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>_T_1342",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_SFENCE_LINE_ASID",
    "message":"MemorySystem;;flush TLB line/ASID",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLB_1>multipleHits",
    "clock":"~FireSim|TLB_1>clock",
    "reset":"~FireSim|TLB_1>reset",
    "label":"ITLB_MULTIPLE_HITS",
    "message":"MemorySystem;;Two matching translations in TLB",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BTBParams",
    "params":{
      "nPages":6,
      "nMatchBits":14,
      "nEntries":28,
      "bhtParams":{
        "nEntries":512,
        "counterLength":1,
        "historyLength":8,
        "historyBits":3
      },
      "nRAS":6,
      "updatesOutOfOrder":false
    }
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.BTB",
    "paramsClassName":"freechips.rocketchip.rocket.BHTParams",
    "params":{
      "nEntries":512,
      "counterLength":1,
      "historyLength":8,
      "historyBits":3
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Frontend>wrong_path",
    "clock":"~FireSim|Frontend>gated_clock",
    "reset":"~FireSim|Frontend>reset",
    "label":"FRONTEND_BTB_NON_CFI_ON_WRONG_PATH",
    "message":"Rocket;;BTB predicted a non-branch was taken while on the wrong path",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Frontend>wrong_path",
    "clock":"~FireSim|Frontend>gated_clock",
    "reset":"~FireSim|Frontend>reset",
    "label":"FRONTEND_BTB_NON_CFI_ON_WRONG_PATH",
    "message":"Rocket;;BTB predicted a non-branch was taken while on the wrong path",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_9"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.RocketTile.bundleOut_0_5.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "definition":{
      "ITBrNTaken":4,
      "ITBrTaken":5,
      "ITReserved7":7,
      "ITExcReturn":3,
      "ITInterrupt":2,
      "ITException":1,
      "ITCoSwap":12,
      "ITUnCall":8,
      "ITReserved6":6,
      "ITNothing":0,
      "ITReturn":13,
      "ITInTail":11,
      "ITInCall":9,
      "ITInJump":15,
      "ITUnJump":14,
      "ITUnTail":10
    }
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.RocketTile.auto.trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPUFMAPipe"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPToInt"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.IntToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPToFP"
  },
  {
    "class":"freechips.rocketchip.util.RetimeModuleAnnotation",
    "target":"FireSim.FPUFMAPipe_1"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_10",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_WB_STRUCTURAL",
    "message":"Core;;structural hazard on writeback",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_33",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DUAL_WRITEBACK",
    "message":"Core;;load and FMA writeback on same cycle",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_34",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_KILLED",
    "message":"Core;;divide killed after issued to divider",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_37",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_BUSY",
    "message":"Core;;divider structural hazard",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|FPU>_T_38",
    "clock":"~FireSim|FPU>clock",
    "reset":"~FireSim|FPU>reset",
    "label":"FPU_DIV_WB_STRUCTURAL",
    "message":"Core;;structural hazard on division writeback",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_65",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_PTE_CACHE_HIT_L0",
    "message":"MemorySystem;;PTE cache hit, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_69",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_PTE_CACHE_HIT_L1",
    "message":"MemorySystem;;PTE cache hit, level 1",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.PTW.l2_tlb_ram",
    "address_width":10,
    "name":"l2_tlb_ram",
    "data_width":47,
    "depth":1024,
    "description":"L2 TLB",
    "write_mask_granularity":47
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_143",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_TLB_HIT_WAY0",
    "message":"MemorySystem;;L2 TLB hit way0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_181",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0",
    "message":"MemorySystem;;successful page-table access, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_183",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_186",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_190",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L0_BAD_PPN_LSB",
    "message":"MemorySystem;;PPN LSBs not zero, level 0",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_193",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1",
    "message":"MemorySystem;;successful page-table access, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_195",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_198",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_202",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L1_BAD_PPN_LSB",
    "message":"MemorySystem;;PPN LSBs not zero, level 1",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_205",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2",
    "message":"MemorySystem;;successful page-table access, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_207",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_BAD_PPN_MSB",
    "message":"MemorySystem;;PPN too large, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_210",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_L2_INVALID_PTE",
    "message":"MemorySystem;;page not present, level 2",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_219",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_TOO_DEEP",
    "message":"MemorySystem;;page table too deep",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>io.mem.s2_nack",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_NACK",
    "message":"MemorySystem;;D$ nacked page-table access",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|PTW>_T_221",
    "clock":"~FireSim|PTW>clock",
    "reset":"~FireSim|PTW>reset",
    "label":"PTW_AE",
    "message":"MemorySystem;;access exception while walking page table",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.RocketTile",
    "paramsClassName":"freechips.rocketchip.tile.RocketTileParams",
    "params":{
      "name":"tile",
      "dataScratchpadBytes":0,
      "btb":{
        "nEntries":28,
        "nMatchBits":14,
        "nPages":6,
        "nRAS":6,
        "bhtParams":{
          "nEntries":512,
          "counterLength":1,
          "historyLength":8,
          "historyBits":3
        },
        "updatesOutOfOrder":false
      },
      "hartId":0,
      "icache":{
        "nSets":64,
        "nWays":4,
        "rowBits":64,
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "cacheIdBits":0,
        "prefetch":false,
        "blockBytes":64,
        "latency":2,
        "fetchBytes":4
      },
      "boundaryBuffers":false,
      "core":{
        "bootFreqHz":0,
        "useVM":true,
        "useUser":false,
        "useSupervisor":false,
        "useDebug":true,
        "useAtomics":true,
        "useAtomicsOnlyForIO":false,
        "useCompressed":true,
        "useRVE":false,
        "useSCIE":false,
        "nLocalInterrupts":0,
        "useNMI":false,
        "nBreakpoints":1,
        "useBPWatch":false,
        "mcontextWidth":0,
        "scontextWidth":0,
        "nPMPs":8,
        "nPerfCounters":0,
        "haveBasicCounters":true,
        "haveCFlush":false,
        "misaWritable":true,
        "nL2TLBEntries":1024,
        "nL2TLBWays":1,
        "mtvecInit":0,
        "mtvecWritable":true,
        "fastLoadWord":true,
        "fastLoadByte":false,
        "branchPredictionModeCSR":false,
        "clockGate":false,
        "mvendorid":0,
        "mimpid":538447876,
        "mulDiv":{
          "mulUnroll":8,
          "divUnroll":1,
          "mulEarlyOut":true,
          "divEarlyOut":true,
          "divEarlyOutGranularity":1
        },
        "fpu":{
          "minFLen":32,
          "fLen":64,
          "divSqrt":true,
          "sfmaLatency":3,
          "dfmaLatency":4
        }
      },
      "dcache":{
        "nSets":64,
        "nWays":4,
        "rowBits":64,
        "replacementPolicy":"random",
        "nTLBSets":1,
        "nTLBWays":32,
        "nTLBBasePageSectors":4,
        "nTLBSuperpages":4,
        "dataECCBytes":1,
        "nMSHRs":0,
        "nSDQ":17,
        "nRPQ":16,
        "nMMIOs":1,
        "blockBytes":64,
        "separateUncachedResp":false,
        "acquireBeforeRelease":false,
        "pipelineWayMux":false,
        "clockGate":false
      },
      "clockSinkParams":{
        "phaseDeg":0.0,
        "phaseErrorDeg":5.0,
        "freqErrorPPM":10000.0,
        "jitterPS":200.0
      }
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_281",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_283",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_285",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_287",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_289",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_291",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_293",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_295",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_297",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_299",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_301",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_303",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_305",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_307",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_309",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_311",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_313",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_315",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_317",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_319",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_321",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_10",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_323",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_10",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_325",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_327",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_329",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_331",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_333",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_335",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_337",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_14",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_339",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_14",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_341",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_M_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_343",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"INTERRUPT_S_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_345",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_347",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_0",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_349",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_351",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_1",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_353",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_355",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_2",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_357",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_359",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_3",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_361",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_363",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_4",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_365",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_367",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_5",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_369",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_371",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_6",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_373",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_375",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_7",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_377",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_379",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_8",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_381",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_383",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_9",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_385",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_387",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_11",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_389",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_391",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_12",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_393",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_395",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_13",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_397",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_M_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_399",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"EXCEPTION_S_15",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_422",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_425",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_434",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_437",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_446",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_449",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_458",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_461",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_470",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_769",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_473",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_769",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_482",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_768",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_485",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_768",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_494",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_773",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_497",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_773",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_506",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_509",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_518",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_772",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_521",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_772",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_530",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_533",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_542",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_545",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_554",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_557",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_566",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_569",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_578",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3860",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_581",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3860",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_590",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1968",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_593",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1968",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_602",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1969",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_605",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1969",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_614",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1970",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_617",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1970",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_626",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_629",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_638",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_641",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_650",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_653",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_662",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_800",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_665",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_800",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_674",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_677",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_686",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_689",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_698",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_803",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_701",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_803",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_710",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_713",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_722",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3075",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_725",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3075",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_734",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_804",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_737",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_804",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_746",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_749",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_758",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3076",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_761",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3076",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_770",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_805",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_773",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_805",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_782",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_785",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_794",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3077",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_797",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3077",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_806",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_806",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_809",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_806",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_818",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_821",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_830",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3078",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_833",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3078",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_842",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_807",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_845",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_807",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_854",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_857",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_866",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3079",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_869",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3079",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_878",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_808",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_881",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_808",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_890",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_893",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_902",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3080",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_905",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3080",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_914",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_809",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_917",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_809",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_926",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_929",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_938",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3081",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_941",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3081",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_950",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_810",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_953",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_810",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_962",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_965",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_974",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3082",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_977",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3082",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_986",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_811",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_989",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_811",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_998",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1001",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1010",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3083",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1013",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3083",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1022",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_812",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1025",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_812",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1034",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1037",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1046",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3084",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1049",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3084",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1058",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_813",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1061",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_813",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1070",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1073",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1082",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3085",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1085",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3085",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1094",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_814",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1097",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_814",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1106",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1109",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1118",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3086",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1121",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3086",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1130",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_815",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1133",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_815",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1142",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1145",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1154",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3087",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1157",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3087",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1166",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1169",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_816",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1178",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1181",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2832",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1190",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3088",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1193",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3088",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1202",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_817",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1205",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_817",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1214",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1217",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2833",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1226",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3089",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1229",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3089",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1238",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1241",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_818",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1250",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1253",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2834",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1262",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3090",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1265",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3090",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1274",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1277",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_819",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1286",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1289",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2835",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1298",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3091",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1301",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3091",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1310",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1313",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_820",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1322",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1325",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2836",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1334",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3092",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1337",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3092",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1346",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1349",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_821",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1358",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2837",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1361",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2837",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1370",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3093",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1373",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3093",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1382",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1385",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_822",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1394",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2838",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1397",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2838",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1406",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3094",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1409",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3094",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1418",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1421",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_823",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1430",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2839",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1433",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2839",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1442",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3095",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1445",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3095",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1454",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1457",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_824",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1466",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2840",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1469",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2840",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1478",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3096",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1481",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3096",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1490",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1493",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_825",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1502",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2841",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1505",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2841",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1514",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3097",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1517",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3097",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1526",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1529",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_826",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1538",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2842",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1541",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2842",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1550",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3098",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1553",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3098",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1562",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1565",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_827",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1574",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2843",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1577",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2843",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1586",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3099",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1589",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3099",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1598",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1601",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_828",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1610",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2844",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1613",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2844",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1622",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3100",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1625",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3100",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1634",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1637",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_829",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1646",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2845",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1649",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2845",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1658",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3101",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1661",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3101",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1670",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1673",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_830",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1682",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2846",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1685",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2846",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1694",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3102",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1697",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3102",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1706",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1709",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_831",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1718",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2847",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1721",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_2847",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1730",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3103",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1733",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3103",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1742",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_774",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1745",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_774",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1754",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3072",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1757",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3072",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1766",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3074",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1769",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3074",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1778",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_256",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1781",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_256",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1790",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_324",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1793",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_324",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1802",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_260",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1805",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_260",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1814",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_320",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1817",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_320",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1826",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_322",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1829",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_322",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1838",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_323",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1841",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_323",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1850",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_384",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1853",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_384",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1862",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_321",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1865",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_321",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1874",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_261",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1877",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_261",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1886",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_262",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1889",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_262",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1898",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_771",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1901",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_771",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1910",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_770",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1913",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_770",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1922",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_928",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1925",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_928",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1934",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_930",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1937",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_930",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1946",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_944",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1949",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_944",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1958",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_945",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1961",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_945",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1970",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_946",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1973",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_946",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1982",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_947",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1985",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_947",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1994",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_948",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_1997",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_948",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2006",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_949",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2009",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_949",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2018",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_950",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2021",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_950",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2030",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_951",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2033",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_951",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2042",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2045",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_952",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2054",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2057",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_953",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2066",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2069",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_954",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2078",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2081",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_955",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2090",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_956",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2093",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_956",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2102",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_957",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2105",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_957",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2114",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_958",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2117",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_958",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2126",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_959",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2129",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_959",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2138",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1985",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2141",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_1985",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2150",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3858",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2153",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3858",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2162",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3857",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2165",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3857",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2174",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3859",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CSRFile>_T_2177",
    "clock":"~FireSim|CSRFile>clock",
    "reset":"~FireSim|CSRFile>reset",
    "label":"CSR_access_3859",
    "message":"Cover Accessing Core CSR field",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_14",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_16",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_18",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_20",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_22",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"DECODE_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_47",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_49",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_51",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_53",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_55",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"EXECUTE_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_67",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_DEBUG_TRIGGER",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_69",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_BREAKPOINT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_71",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_FETCH_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_73",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_ILLEGAL_INSTRUCTION",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_75",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_FETCH_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_77",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"MEMORY_MISALIGNED_FETCH",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_106",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_MISALIGNED_STORE",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_108",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_MISALIGNED_LOAD",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_110",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_STORE_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_112",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_LOAD_ACCESS",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_114",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_STORE_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|Rocket>_T_116",
    "clock":"~FireSim|Rocket>clock",
    "reset":"~FireSim|Rocket>reset",
    "label":"WRITEBACK_LOAD_PAGE_FAULT",
    "message":"",
    "coverGenerated":true
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.TileResetDomain.auto.tile_trace_core_source_out.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TileResetDomain"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.FixedClockBroadcast_6"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_13"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_15"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_13"
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.BundleBridgeNexus_14.inputs_0.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target":"FireSim.BundleBridgeNexus_14.auto.in.group",
    "typeName":"freechips.rocketchip.util.TraceItype",
    "fields":[
      [
        "itype"
      ]
    ]
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_14"
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.TLPLIC",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.PLICParams",
    "params":{
      "baseAddress":201326592,
      "maxPriorities":7,
      "intStages":0,
      "maxHarts":15872
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_15",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_16",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_24",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_25",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_26",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_27",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_35",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_read_start",
    "message":"Acting priority of interrupt source 1: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_36",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_read_out",
    "message":"Acting priority of interrupt source 1: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_37",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_write_start",
    "message":"Acting priority of interrupt source 1: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_38",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_1_Reg_write_out",
    "message":"Acting priority of interrupt source 1: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_46",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_47",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_55",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_56",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_read_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_57",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_start",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_58",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"enables_0_Reg_write_out",
    "message":"Targets 1-2. Set bits to 1 if interrupt should be enabled.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_66",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_read_start",
    "message":"Acting priority of interrupt source 2: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_67",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_read_out",
    "message":"Acting priority of interrupt source 2: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_68",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_write_start",
    "message":"Acting priority of interrupt source 2: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_69",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"priority_2_Reg_write_out",
    "message":"Acting priority of interrupt source 2: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_77",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_78",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_86",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_1_Reg_read_start",
    "message":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_87",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_1_Reg_read_out",
    "message":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_95",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_2_Reg_read_start",
    "message":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_96",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"pending_2_Reg_read_out",
    "message":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_104",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_read_start",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_105",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_read_out",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_106",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_write_start",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_107",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_1_Reg_write_out",
    "message":"Interrupt & claim threshold for target 1. Maximum value is 3.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_115",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_116",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_129",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_read_start",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_130",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_read_out",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_131",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_write_start",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_132",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_1_Reg_write_out",
    "message":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_140",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_read_start",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_141",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_read_out",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_142",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_write_start",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_143",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"threshold_0_Reg_write_out",
    "message":"Interrupt & claim threshold for target 0. Maximum value is 3.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_151",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_152",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_165",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_read_start",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_166",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_read_out",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_167",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_write_start",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_out_T_168",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"claim_complete_0_Reg_write_out",
    "message":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.TLPLIC",
    "regMappingSer":{
      "displayName":"TLPLIC",
      "deviceName":"TLPLIC",
      "baseAddress":201326592,
      "regFields":[
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 1",
          "group":"priority_1",
          "groupDesc":"Acting priority of interrupt source 1",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":2,
          "name":"priority_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Acting priority of interrupt source 2",
          "group":"priority_2",
          "groupDesc":"Acting priority of interrupt source 2",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":1,
          "bitWidth":1,
          "name":"pending_1",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 1 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1000",
          "bitOffset":2,
          "bitWidth":1,
          "name":"pending_2",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Set to 1 if interrupt source 2 is pending, regardless of its enable or priority setting.",
          "group":"pending",
          "groupDesc":"Pending Bit Array. 1 Bit for each interrupt source.",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2000",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_0",
          "groupDesc":"Enable bits for each interrupt source for target 0. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":0,
          "bitWidth":1,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x2080",
          "bitOffset":1,
          "bitWidth":2,
          "name":"enables_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Targets 1-2. Set bits to 1 if interrupt should be enabled.",
          "group":"enables_1",
          "groupDesc":"Enable bits for each interrupt source for target 1. 1 bit for each interrupt source.",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 0. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x200000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 0. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":0,
          "bitWidth":2,
          "name":"threshold_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Interrupt & claim threshold for target 1. Maximum value is 3.",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":2,
          "bitWidth":30,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x201000",
          "bitOffset":32,
          "bitWidth":32,
          "name":"claim_complete_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"Some(MODIFY)",
          "rdAction":"Some(MODIFY)",
          "desc":"Claim/Complete register for Target 1. Reading this register returns the claimed interrupt number and makes it no longer pending.Writing the interrupt number back completes the interrupt.",
          "group":"None",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_24",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_CLAIMS",
    "message":"two claims with no intervening complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_26",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_COMPLETES",
    "message":"two completes with no intervening claim",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_30",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"TWO_INTS_PENDING",
    "message":"two enabled interrupts became pending on same cycle",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLPLIC>_T_35",
    "clock":"~FireSim|TLPLIC>clock",
    "reset":"~FireSim|TLPLIC>reset",
    "label":"PLIC_THRESHOLD",
    "message":"Interrupts;;interrupt pending but less than threshold",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.ParamsAnnotation",
    "target":"FireSim.CLINT",
    "paramsClassName":"freechips.rocketchip.devices.tilelink.CLINTParams",
    "params":{
      "baseAddress":33554432,
      "intStages":0
    }
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_7",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_8",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_9",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_10",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_0_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_18",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_19",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_20",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_21",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_1_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_29",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_30",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_31",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_32",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_2_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_40",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_41",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_42",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_43",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_3_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_51",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_52",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_53",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_54",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_4_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_62",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_63",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_64",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_65",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_5_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_73",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_74",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_75",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_76",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_6_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_84",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_85",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_86",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_87",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtimecmp_0_7_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_95",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_96",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_97",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_98",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_0_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_106",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_107",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_108",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_109",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_1_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_117",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_118",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_119",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_120",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_2_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_128",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_129",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_130",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_131",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_3_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_139",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_140",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_141",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_142",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_4_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_150",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_151",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_152",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_153",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_5_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_161",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_162",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_163",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_164",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_6_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_172",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_173",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_174",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_write_start",
    "message":": RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_175",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"mtime_7_Reg_write_out",
    "message":": RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_183",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_read_start",
    "message":"MSIP bit for Hart 0: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_184",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_read_out",
    "message":"MSIP bit for Hart 0: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_185",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_write_start",
    "message":"MSIP bit for Hart 0: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_186",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"msip_0_Reg_write_out",
    "message":"MSIP bit for Hart 0: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_194",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|CLINT>_out_T_195",
    "clock":"~FireSim|CLINT>clock",
    "reset":"~FireSim|CLINT>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.CLINT",
    "regMappingSer":{
      "displayName":"CLINT",
      "deviceName":"CLINT",
      "baseAddress":33554432,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":1,
          "name":"msip_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"MSIP bit for Hart 0",
          "group":"msip",
          "groupDesc":"MSIP Bits",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":1,
          "bitWidth":31,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"msip",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtimecmp_0_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"MTIMECMP for hart 0",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtimecmp_0_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtimecmp_0_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtimecmp_0_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtimecmp_0_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtimecmp_0_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtimecmp_0_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4000",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtimecmp_0_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtimecmp_0",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":0,
          "bitWidth":8,
          "name":"mtime_0",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"Timer Register",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":8,
          "bitWidth":8,
          "name":"mtime_1",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":16,
          "bitWidth":8,
          "name":"mtime_2",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":24,
          "bitWidth":8,
          "name":"mtime_3",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":32,
          "bitWidth":8,
          "name":"mtime_4",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":40,
          "bitWidth":8,
          "name":"mtime_5",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":48,
          "bitWidth":8,
          "name":"mtime_6",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xbff8",
          "bitOffset":56,
          "bitWidth":8,
          "name":"mtime_7",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"mtime",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|BundleBridgeNexus_15>outputs_0"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.BundleBridgeNexus_16"
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.BlockDeviceFrontend",
    "regMappingSer":{
      "displayName":"BlockDeviceFrontend",
      "deviceName":"BlockDeviceFrontend",
      "baseAddress":268521472,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":64,
          "name":"unnamedRegField0_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField8_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegFieldc_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField10_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x11",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField11_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x12",
          "bitOffset":0,
          "bitWidth":2,
          "name":"unnamedRegField12_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x13",
          "bitOffset":0,
          "bitWidth":1,
          "name":"unnamedRegField13_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":2,
          "name":"unnamedRegField14_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField18_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x1c",
          "bitOffset":0,
          "bitWidth":32,
          "name":"unnamedRegField1c_0",
          "resetValue":0,
          "accessType":"None",
          "wrType":"None",
          "rdAction":"None",
          "desc":"None",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLWidthWidget_10"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_2",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_4",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_7",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_A_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel A: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_8",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FIRE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_10",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_STALL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_12",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_IDLE",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and ready",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLAsyncCrossingSink_1>_T_15",
    "clock":"~FireSim|TLAsyncCrossingSink_1>clock",
    "reset":"~FireSim|TLAsyncCrossingSink_1>reset",
    "label":"TL_ASYNC_CROSSING_SINK_D_FULL",
    "message":"MemorySystem;;TLAsyncCrossingSink Channel D: not valid and not ready",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLBuffer_17"
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_9",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_read_start",
    "message":"Transmit watermark interrupt enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_10",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_read_out",
    "message":"Transmit watermark interrupt enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_11",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_write_start",
    "message":"Transmit watermark interrupt enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_12",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ie_Reg_write_out",
    "message":"Transmit watermark interrupt enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_20",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_read_start",
    "message":"Receive watermark interrupt enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_21",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_read_out",
    "message":"Receive watermark interrupt enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_22",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_write_start",
    "message":"Receive watermark interrupt enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_23",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ie_Reg_write_out",
    "message":"Receive watermark interrupt enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_31",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ip_Reg_read_start",
    "message":"Transmit watermark interrupt pending: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_32",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txwm_ip_Reg_read_out",
    "message":"Transmit watermark interrupt pending: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_40",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ip_Reg_read_start",
    "message":"Receive watermark interrupt pending: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_41",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxwm_ip_Reg_read_out",
    "message":"Receive watermark interrupt pending: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_49",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_read_start",
    "message":"Transmit enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_50",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_read_out",
    "message":"Transmit enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_51",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_write_start",
    "message":"Transmit enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_52",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txen_Reg_write_out",
    "message":"Transmit enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_60",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_read_start",
    "message":"Number of stop bits: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_61",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_read_out",
    "message":"Number of stop bits: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_62",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_write_start",
    "message":"Number of stop bits: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_63",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"nstop_Reg_write_out",
    "message":"Number of stop bits: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_71",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_read_start",
    "message":"Transmit watermark level: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_72",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_read_out",
    "message":"Transmit watermark level: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_73",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_write_start",
    "message":"Transmit watermark level: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_74",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"txcnt_Reg_write_out",
    "message":"Transmit watermark level: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_82",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_read_start",
    "message":"Receive enable: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_83",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_read_out",
    "message":"Receive enable: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_84",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_write_start",
    "message":"Receive enable: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_85",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxen_Reg_write_out",
    "message":"Receive enable: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_93",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_read_start",
    "message":"Receive watermark level: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_94",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_read_out",
    "message":"Receive watermark level: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_95",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_write_start",
    "message":"Receive watermark level: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_96",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"rxcnt_Reg_write_out",
    "message":"Receive watermark level: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_104",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_read_start",
    "message":"Baud rate divisor: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_105",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_read_out",
    "message":"Baud rate divisor: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_106",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_write_start",
    "message":"Baud rate divisor: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_107",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"div_Reg_write_out",
    "message":"Baud rate divisor: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_115",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_write_start",
    "message":"Transmit data: RegField Write Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_116",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_write_out",
    "message":"Transmit data: RegField Write Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_124",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_125",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_133",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"full_Reg_read_start",
    "message":"Transmit FIFO full: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_134",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"full_Reg_read_out",
    "message":"Transmit FIFO full: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_142",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_read_start",
    "message":"Receive data: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_143",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"data_Reg_read_out",
    "message":"Receive data: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_151",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_start",
    "message":": RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_152",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"reserved_Reg_read_out",
    "message":": RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_160",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"empty_Reg_read_start",
    "message":"Receive FIFO empty: RegField Read Request Initiate",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLUART>_out_T_161",
    "clock":"~FireSim|TLUART>clock",
    "reset":"~FireSim|TLUART>reset",
    "label":"empty_Reg_read_out",
    "message":"Receive FIFO empty: RegField Read Request Complete",
    "coverGenerated":true
  },
  {
    "class":"freechips.rocketchip.util.RegFieldDescMappingAnnotation",
    "target":"FireSim.TLUART",
    "regMappingSer":{
      "displayName":"TLUART",
      "deviceName":"TLUART",
      "baseAddress":1409286144,
      "regFields":[
        {
          "byteOffset":"0x0",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"W",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit data",
          "group":"txdata",
          "groupDesc":"Transmit data",
          "volatile":false,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x0",
          "bitOffset":31,
          "bitWidth":1,
          "name":"full",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit FIFO full",
          "group":"txdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":0,
          "bitWidth":8,
          "name":"data",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive data",
          "group":"rxdata",
          "groupDesc":"Receive data",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":8,
          "bitWidth":23,
          "name":"reserved",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x4",
          "bitOffset":31,
          "bitWidth":1,
          "name":"empty",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive FIFO empty",
          "group":"rxdata",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit enable",
          "group":"txctrl",
          "groupDesc":"Serial transmit control",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x8",
          "bitOffset":1,
          "bitWidth":1,
          "name":"nstop",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Number of stop bits",
          "group":"txctrl",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xc",
          "bitOffset":0,
          "bitWidth":1,
          "name":"rxen",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive enable",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xa",
          "bitOffset":0,
          "bitWidth":9,
          "name":"txcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0xe",
          "bitOffset":0,
          "bitWidth":9,
          "name":"rxcnt",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark level",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt enable",
          "group":"ie",
          "groupDesc":"Serial interrupt enable",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x10",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ie",
          "resetValue":0,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt enable",
          "group":"ie",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":0,
          "bitWidth":1,
          "name":"txwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Transmit watermark interrupt pending",
          "group":"ip",
          "groupDesc":"Serial interrupt pending",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x14",
          "bitOffset":1,
          "bitWidth":1,
          "name":"rxwm_ip",
          "resetValue":0,
          "accessType":"R",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Receive watermark interrupt pending",
          "group":"ip",
          "groupDesc":"None",
          "volatile":true,
          "hasReset":false,
          "enumerations":{
            
          }
        },
        {
          "byteOffset":"0x18",
          "bitOffset":0,
          "bitWidth":16,
          "name":"div",
          "resetValue":868,
          "accessType":"RW",
          "wrType":"None",
          "rdAction":"None",
          "desc":"Baud rate divisor",
          "group":"None",
          "groupDesc":"None",
          "volatile":false,
          "hasReset":true,
          "enumerations":{
            
          }
        }
      ]
    }
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"FireSim.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":268521472,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "blkdev-controller@10015000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":17179869184
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"freechips.rocketchip.util.AddressMapAnnotation",
    "target":"FireSim.DigitalTop",
    "mapping":[
      {
        "range":{
          "base":12288,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":false,
          "a":true
        },
        "names":[
          "error-device@3000"
        ]
      },
      {
        "range":{
          "base":65536,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":false,
          "x":true,
          "c":false,
          "a":false
        },
        "names":[
          "rom@10000"
        ]
      },
      {
        "range":{
          "base":33554432,
          "size":65536
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "clint@2000000"
        ]
      },
      {
        "range":{
          "base":33619968,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "cache-controller@2010000"
        ]
      },
      {
        "range":{
          "base":201326592,
          "size":67108864
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "interrupt-controller@c000000"
        ]
      },
      {
        "range":{
          "base":268435456,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "lbwif-ram@10000000"
        ]
      },
      {
        "range":{
          "base":268521472,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "blkdev-controller@10015000"
        ]
      },
      {
        "range":{
          "base":1409286144,
          "size":4096
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":false,
          "c":false,
          "a":true
        },
        "names":[
          "serial@54000000"
        ]
      },
      {
        "range":{
          "base":2147483648,
          "size":17179869184
        },
        "permissions":{
          "r":true,
          "w":true,
          "x":true,
          "c":true,
          "a":true
        },
        "names":[
          "memory@80000000"
        ]
      }
    ],
    "label":"mapping"
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.ClockGroup_6"
  },
  {
    "class":"midas.targetutils.FirrtlEnableModelMultiThreadingAnnotation",
    "target":"~FireSim|TileResetDomain/tile:RocketTile"
  },
  {
    "class":"midas.targetutils.FirrtlMemModelAnnotation",
    "target":"~FireSim|Rocket>rf"
  },
  {
    "class":"midas.targetutils.FirrtlMemModelAnnotation",
    "target":"~FireSim|FPU>regfile"
  },
  {
    "class":"midas.widgets.ClockBridgeAnnotation",
    "target":"~FireSim|RationalClockBridge",
    "clocks":[
      {
        "name":"implicit_clock",
        "multiplier":1,
        "divisor":1
      }
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"clocks",
    "channelInfo":{
      "class":"midas.passes.fame.TargetClockChannel",
      "clockInfo":[
        {
          "name":"implicit_clock",
          "multiplier":1,
          "divisor":1
        }
      ]
    },
    "sinks":[
      "~FireSim|RationalClockBridge>clocks[0]"
    ]
  },
  {
    "class":"freechips.rocketchip.util.SRAMAnnotation",
    "target":"FireSim.TLRAM.mem",
    "address_width":9,
    "name":"mem",
    "data_width":64,
    "depth":512,
    "description":"mem",
    "write_mask_granularity":8
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_6",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_no_data_error",
    "message":"Ecc Covers <mem_active> X <no_data_error>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_7",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_data_correctable_error_not_reported",
    "message":"Ecc Covers <mem_active> X <data_correctable_error_not_reported>",
    "coverGenerated":true
  },
  {
    "class":"midas.targetutils.AutoCounterFirrtlAnnotation",
    "target":"~FireSim|TLRAM>_T_8",
    "clock":"~FireSim|TLRAM>clock",
    "reset":"~FireSim|TLRAM>reset",
    "label":"mem_active_data_uncorrectable_error_reported",
    "message":"Ecc Covers <mem_active> X <data_uncorrectable_error_reported>",
    "coverGenerated":true
  },
  {
    "class":"firrtl.passes.InlineAnnotation",
    "target":"FireSim.TLXbar_9"
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|SerialBridge",
    "channelNames":[
      "reset",
      "serial_in_fwd",
      "serial_in_rev",
      "serial_out_fwd",
      "serial_out_rev"
    ],
    "widgetClass":"firesim.bridges.SerialBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.SerialBridgeParams",
      "memoryRegionNameOpt":"MainMemory_0"
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_out_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|SerialBridge>serial.out.ready",
      "validSource":"~FireSim|SerialBridge>serial.out.valid"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>serial.out.valid",
      "~FireSim|SerialBridge>serial.out.bits"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_out_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sinks":[
      "~FireSim|SerialBridge>serial.out.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_in_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|SerialBridge>serial.in.ready",
      "validSink":"~FireSim|SerialBridge>serial.in.valid"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sinks":[
      "~FireSim|SerialBridge>serial.in.valid",
      "~FireSim|SerialBridge>serial.in.bits"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"serial_in_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|SerialBridge>clock",
    "sources":[
      "~FireSim|SerialBridge>serial.in.ready"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|FASEDBridge",
    "channelNames":[
      "reset",
      "axi4_r_fwd",
      "axi4_r_rev",
      "axi4_b_fwd",
      "axi4_b_rev",
      "axi4_ar_fwd",
      "axi4_ar_rev",
      "axi4_w_fwd",
      "axi4_w_rev",
      "axi4_aw_fwd",
      "axi4_aw_rev"
    ],
    "widgetClass":"midas.models.FASEDMemoryTimingModel",
    "widgetConstructorKey":{
      "class":"midas.models.CompleteConfig",
      "userProvided":{
        "class":"midas.models.LatencyPipeConfig",
        "params":{
          "maxReads":16,
          "maxWrites":16,
          "maxReadLength":256,
          "maxWriteLength":256,
          "detectAddressCollisions":false,
          "stallEventCounters":false,
          "localHCycleCount":false,
          "latencyHistograms":false,
          "xactionCounters":true,
          "beatCounters":true,
          "targetCycleCounter":false,
          "occupancyHistograms":[
            0,
            2,
            4,
            8
          ],
          "addrRangeCounters":0
        }
      },
      "axi4Widths":{
        "dataBits":64,
        "addrBits":35,
        "idBits":4
      },
      "axi4Edge":{
        "maxReadTransfer":8,
        "maxWriteTransfer":8,
        "idReuse":1,
        "maxFlight":10,
        "address":[
          {
            "base":2147483648,
            "mask":2147483647
          },
          {
            "base":4294967296,
            "mask":4294967295
          },
          {
            "base":8589934592,
            "mask":8589934591
          },
          {
            "base":17179869184,
            "mask":2147483647
          }
        ]
      },
      "memoryRegionName":"MainMemory_0"
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_ar_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.ar.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.ar.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.ar.valid",
      "~FireSim|FASEDBridge>axi4.ar.bits.user",
      "~FireSim|FASEDBridge>axi4.ar.bits.id",
      "~FireSim|FASEDBridge>axi4.ar.bits.region",
      "~FireSim|FASEDBridge>axi4.ar.bits.qos",
      "~FireSim|FASEDBridge>axi4.ar.bits.prot",
      "~FireSim|FASEDBridge>axi4.ar.bits.cache",
      "~FireSim|FASEDBridge>axi4.ar.bits.lock",
      "~FireSim|FASEDBridge>axi4.ar.bits.burst",
      "~FireSim|FASEDBridge>axi4.ar.bits.size",
      "~FireSim|FASEDBridge>axi4.ar.bits.len",
      "~FireSim|FASEDBridge>axi4.ar.bits.addr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_ar_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.ar.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_w_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.w.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.w.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.w.valid",
      "~FireSim|FASEDBridge>axi4.w.bits.user",
      "~FireSim|FASEDBridge>axi4.w.bits.strb",
      "~FireSim|FASEDBridge>axi4.w.bits.id",
      "~FireSim|FASEDBridge>axi4.w.bits.last",
      "~FireSim|FASEDBridge>axi4.w.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_w_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.w.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_aw_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|FASEDBridge>axi4.aw.ready",
      "validSource":"~FireSim|FASEDBridge>axi4.aw.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.aw.valid",
      "~FireSim|FASEDBridge>axi4.aw.bits.user",
      "~FireSim|FASEDBridge>axi4.aw.bits.id",
      "~FireSim|FASEDBridge>axi4.aw.bits.region",
      "~FireSim|FASEDBridge>axi4.aw.bits.qos",
      "~FireSim|FASEDBridge>axi4.aw.bits.prot",
      "~FireSim|FASEDBridge>axi4.aw.bits.cache",
      "~FireSim|FASEDBridge>axi4.aw.bits.lock",
      "~FireSim|FASEDBridge>axi4.aw.bits.burst",
      "~FireSim|FASEDBridge>axi4.aw.bits.size",
      "~FireSim|FASEDBridge>axi4.aw.bits.len",
      "~FireSim|FASEDBridge>axi4.aw.bits.addr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_aw_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.aw.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_r_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|FASEDBridge>axi4.r.ready",
      "validSink":"~FireSim|FASEDBridge>axi4.r.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.r.valid",
      "~FireSim|FASEDBridge>axi4.r.bits.user",
      "~FireSim|FASEDBridge>axi4.r.bits.id",
      "~FireSim|FASEDBridge>axi4.r.bits.last",
      "~FireSim|FASEDBridge>axi4.r.bits.data",
      "~FireSim|FASEDBridge>axi4.r.bits.resp"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_r_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.r.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_b_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|FASEDBridge>axi4.b.ready",
      "validSink":"~FireSim|FASEDBridge>axi4.b.valid"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sinks":[
      "~FireSim|FASEDBridge>axi4.b.valid",
      "~FireSim|FASEDBridge>axi4.b.bits.user",
      "~FireSim|FASEDBridge>axi4.b.bits.id",
      "~FireSim|FASEDBridge>axi4.b.bits.resp"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"axi4_b_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|FASEDBridge>clock",
    "sources":[
      "~FireSim|FASEDBridge>axi4.b.ready"
    ]
  },
  {
    "class":"firrtl.passes.wiring.SourceAnnotation",
    "target":"FireSim.FixedClockBroadcast_1.in.clock",
    "pin":"inclock"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~FireSim|FixedClockBroadcast_1>in.clock"
  },
  {
    "class":"firrtl.transforms.NoDedupAnnotation",
    "target":"~FireSim|FixedClockBroadcast_1"
  },
  {
    "class":"firrtl.passes.wiring.SinkAnnotation",
    "target":"FireSim.FireSim._WIRE",
    "pin":"inclock"
  },
  {
    "class":"firrtl.transforms.NoDedupAnnotation",
    "target":"~FireSim|FireSim"
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|UARTBridge",
    "channelNames":[
      "reset",
      "uart_txd",
      "uart_rxd"
    ],
    "widgetClass":"firesim.bridges.UARTBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.UARTKey",
      "uParams":{
        "address":1409286144,
        "dataBits":8,
        "stopBits":2,
        "divisorBits":16,
        "oversample":4,
        "nSamples":3,
        "nTxEntries":256,
        "nRxEntries":256,
        "includeFourWire":false,
        "includeParity":false,
        "includeIndependentParity":false,
        "initBaudRate":3686400
      },
      "div":868
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sources":[
      "~FireSim|UARTBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"uart_txd",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sources":[
      "~FireSim|UARTBridge>uart.txd"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"uart_rxd",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|UARTBridge>clock",
    "sinks":[
      "~FireSim|UARTBridge>uart.rxd"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|BlockDevBridge",
    "channelNames":[
      "reset",
      "bdev_info_max_req_len",
      "bdev_info_nsectors",
      "bdev_resp_fwd",
      "bdev_resp_rev",
      "bdev_data_fwd",
      "bdev_data_rev",
      "bdev_req_fwd",
      "bdev_req_rev"
    ],
    "widgetClass":"firesim.bridges.BlockDevBridgeModule",
    "widgetConstructorKey":{
      "class":"testchipip.BlockDeviceConfig",
      "nTrackers":1
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_info_max_req_len",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.info.max_req_len"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_info_nsectors",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.info.nsectors"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_data_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|BlockDevBridge>bdev.data.ready",
      "validSource":"~FireSim|BlockDevBridge>bdev.data.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.data.valid",
      "~FireSim|BlockDevBridge>bdev.data.bits.tag",
      "~FireSim|BlockDevBridge>bdev.data.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_data_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.data.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_req_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySink":"~FireSim|BlockDevBridge>bdev.req.ready",
      "validSource":"~FireSim|BlockDevBridge>bdev.req.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.req.valid",
      "~FireSim|BlockDevBridge>bdev.req.bits.tag",
      "~FireSim|BlockDevBridge>bdev.req.bits.len",
      "~FireSim|BlockDevBridge>bdev.req.bits.offset",
      "~FireSim|BlockDevBridge>bdev.req.bits.write"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_req_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.req.ready"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_resp_fwd",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledForwardChannel",
      "readySource":"~FireSim|BlockDevBridge>bdev.resp.ready",
      "validSink":"~FireSim|BlockDevBridge>bdev.resp.valid"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sinks":[
      "~FireSim|BlockDevBridge>bdev.resp.valid",
      "~FireSim|BlockDevBridge>bdev.resp.bits.tag",
      "~FireSim|BlockDevBridge>bdev.resp.bits.data"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"bdev_resp_rev",
    "channelInfo":{
      "class":"midas.passes.fame.DecoupledReverseChannel$"
    },
    "clock":"~FireSim|BlockDevBridge>clock",
    "sources":[
      "~FireSim|BlockDevBridge>bdev.resp.ready"
    ]
  },
  {
    "class":"midas.widgets.SerializableBridgeAnnotation",
    "target":"~FireSim|TracerVBridge",
    "channelNames":[
      "trace_insns_0_tval",
      "trace_insns_0_cause",
      "trace_insns_0_interrupt",
      "trace_insns_0_exception",
      "trace_insns_0_priv",
      "trace_insns_0_insn",
      "trace_insns_0_iaddr",
      "trace_insns_0_valid",
      "trace_reset",
      "triggerDebit",
      "triggerCredit"
    ],
    "widgetClass":"firesim.bridges.TracerVBridgeModule",
    "widgetConstructorKey":{
      "class":"firesim.bridges.TracerVKey",
      "insnWidths":{
        "iaddr":40,
        "insn":32,
        "cause":64,
        "tval":40
      },
      "vecSize":1
    }
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_tval",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].tval"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_cause",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].cause"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_interrupt",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].interrupt"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_exception",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].exception"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_priv",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].priv"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_insn",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].insn"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_iaddr",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].iaddr"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_insns_0_valid",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.insns[0].valid"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"trace_reset",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sources":[
      "~FireSim|TracerVBridge>trace.reset"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"triggerDebit",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sinks":[
      "~FireSim|TracerVBridge>triggerDebit"
    ]
  },
  {
    "class":"midas.passes.fame.FAMEChannelConnectionAnnotation",
    "globalName":"triggerCredit",
    "channelInfo":{
      "class":"midas.passes.fame.PipeChannel",
      "latency":1
    },
    "clock":"~FireSim|TracerVBridge>trace.clock",
    "sinks":[
      "~FireSim|TracerVBridge>triggerCredit"
    ]
  },
  {
    "class":"midas.targetutils.TriggerSourceAnnotation",
    "target":"~FireSim|FireSim>_WIRE_1",
    "clock":"~FireSim|FireSim>_WIRE_3",
    "sourceType":true
  },
  {
    "class":"midas.targetutils.TriggerSourceAnnotation",
    "target":"~FireSim|FireSim>_WIRE_2",
    "clock":"~FireSim|FireSim>_WIRE_4",
    "sourceType":false
  },
  {
    "class":"firrtl.stage.RunFirrtlTransformAnnotation",
    "transform":"firrtl.passes.wiring.WiringTransform"
  }
]
